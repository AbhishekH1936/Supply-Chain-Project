[{"/home/nikhil/Desktop/scm_project/src/index.js":"1","/home/nikhil/Desktop/scm_project/src/App.js":"2","/home/nikhil/Desktop/scm_project/src/components/Navbar.js":"3","/home/nikhil/Desktop/scm_project/src/components/Dropdown.js":"4","/home/nikhil/Desktop/scm_project/src/components/Button.js":"5","/home/nikhil/Desktop/scm_project/src/components/MenuItems.js":"6","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Investor.js":"7","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Farmer.js":"8","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Distributor.js":"9","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Retailer.js":"10","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Storage.js":"11","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Transporter.js":"12","/home/nikhil/Desktop/scm_project/src/components/pages/signup/AgroConsultant.js":"13","/home/nikhil/Desktop/scm_project/src/components/pages/ContactUs.js":"14","/home/nikhil/Desktop/scm_project/src/components/pages/Instructions.js":"15","/home/nikhil/Desktop/scm_project/src/components/pages/Home.js":"16","/home/nikhil/Desktop/scm_project/src/components/pages/Navbar_GM.js":"17","/home/nikhil/Desktop/scm_project/src/components/pages/login/login.js":"18","/home/nikhil/Desktop/scm_project/src/components/pages/main/main.js":"19","/home/nikhil/Desktop/scm_project/src/components/Firebase/index.js":"20","/home/nikhil/Desktop/scm_project/src/components/pages/main/MainNavbar.js":"21","/home/nikhil/Desktop/scm_project/src/components/pages/main/UnverifiedUsers.js":"22","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerHome.js":"23","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerNavbar.js":"24","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerProfile.js":"25","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/ProposeCrops.js":"26","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/CropsStatus.js":"27","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/ApproveCrops.js":"28","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/BookConsultant.js":"29","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantHome.js":"30","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantNavbar.js":"31","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AcceptOffer.js":"32","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/RateCrops.js":"33","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/RateFarmer.js":"34","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/SecurityDeposit.js":"35","/home/nikhil/Desktop/scm_project/src/components/pages/Web3/web3Component.js":"36","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Supplier.js":"37","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierHome.js":"38","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierNavbar.js":"39","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/EditCommodities.js":"40","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/ManageCommodities.js":"41","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/BuySupplies.js":"42","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantProfile.js":"43","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierProfile.js":"44","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierEditProfile.js":"45","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerEditProfile.js":"46","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantEditProfile.js":"47","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/DistributorHome.js":"48","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/DistributorNavbar.js":"49","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/hireTransporter.js":"50","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/buyGoods.js":"51","/home/nikhil/Desktop/scm_project/src/components/pages/main/ViewExisting.js":"52","/home/nikhil/Desktop/scm_project/src/components/pages/Investor/InvestorHome.js":"53","/home/nikhil/Desktop/scm_project/src/components/pages/Investor/ActiveFunding.js":"54","/home/nikhil/Desktop/scm_project/src/components/pages/Investor/UnFundedCrops.js":"55","/home/nikhil/Desktop/scm_project/src/components/pages/Investor/InvestorNavbar.js":"56","/home/nikhil/Desktop/scm_project/src/components/pages/Transporter/TransporterHome.js":"57","/home/nikhil/Desktop/scm_project/src/components/pages/Transporter/TransportRequest.js":"58","/home/nikhil/Desktop/scm_project/src/components/pages/Transporter/TransporterNavbar.js":"59"},{"size":149,"mtime":1617371842058,"results":"60","hashOfConfig":"61"},{"size":6578,"mtime":1622797931619,"results":"62","hashOfConfig":"61"},{"size":2361,"mtime":1617977155615,"results":"63","hashOfConfig":"61"},{"size":791,"mtime":1617383010849,"results":"64","hashOfConfig":"61"},{"size":220,"mtime":1609145996123,"results":"65","hashOfConfig":"61"},{"size":549,"mtime":1622730929847,"results":"66","hashOfConfig":"61"},{"size":13099,"mtime":1622800319554,"results":"67","hashOfConfig":"61"},{"size":11486,"mtime":1622791089098,"results":"68","hashOfConfig":"61"},{"size":13258,"mtime":1622791079854,"results":"69","hashOfConfig":"61"},{"size":12307,"mtime":1617632184891,"results":"70","hashOfConfig":"61"},{"size":13106,"mtime":1617632204092,"results":"71","hashOfConfig":"61"},{"size":14349,"mtime":1622798226345,"results":"72","hashOfConfig":"61"},{"size":13261,"mtime":1622791070422,"results":"73","hashOfConfig":"61"},{"size":1908,"mtime":1622788362949,"results":"74","hashOfConfig":"61"},{"size":3362,"mtime":1622791721618,"results":"75","hashOfConfig":"61"},{"size":753,"mtime":1617458519897,"results":"76","hashOfConfig":"61"},{"size":1500,"mtime":1617382955736,"results":"77","hashOfConfig":"61"},{"size":9580,"mtime":1622798141758,"results":"78","hashOfConfig":"61"},{"size":264,"mtime":1617382877316,"results":"79","hashOfConfig":"61"},{"size":608,"mtime":1615792482175,"results":"80","hashOfConfig":"61"},{"size":1293,"mtime":1622736845330,"results":"81","hashOfConfig":"61"},{"size":4941,"mtime":1622792566648,"results":"82","hashOfConfig":"61"},{"size":5622,"mtime":1622790996325,"results":"83","hashOfConfig":"61"},{"size":1553,"mtime":1622285536697,"results":"84","hashOfConfig":"61"},{"size":3340,"mtime":1622791006510,"results":"85","hashOfConfig":"61"},{"size":14826,"mtime":1622792550027,"results":"86","hashOfConfig":"61"},{"size":5732,"mtime":1622792520406,"results":"87","hashOfConfig":"61"},{"size":4839,"mtime":1622792498437,"results":"88","hashOfConfig":"61"},{"size":5266,"mtime":1622791566099,"results":"89","hashOfConfig":"61"},{"size":1839,"mtime":1622790874732,"results":"90","hashOfConfig":"61"},{"size":1801,"mtime":1622286376037,"results":"91","hashOfConfig":"61"},{"size":4422,"mtime":1622723074991,"results":"92","hashOfConfig":"61"},{"size":17344,"mtime":1622791855565,"results":"93","hashOfConfig":"61"},{"size":13355,"mtime":1622791872437,"results":"94","hashOfConfig":"61"},{"size":4187,"mtime":1622799821744,"results":"95","hashOfConfig":"61"},{"size":4609,"mtime":1622791703065,"results":"96","hashOfConfig":"61"},{"size":11989,"mtime":1622791106789,"results":"97","hashOfConfig":"61"},{"size":1796,"mtime":1622791682025,"results":"98","hashOfConfig":"61"},{"size":1573,"mtime":1622286423873,"results":"99","hashOfConfig":"61"},{"size":10591,"mtime":1622792601045,"results":"100","hashOfConfig":"61"},{"size":212,"mtime":1618581590268,"results":"101","hashOfConfig":"61"},{"size":7359,"mtime":1622790965320,"results":"102","hashOfConfig":"61"},{"size":3347,"mtime":1622790880876,"results":"103","hashOfConfig":"61"},{"size":3068,"mtime":1622791891046,"results":"104","hashOfConfig":"61"},{"size":11981,"mtime":1622791669361,"results":"105","hashOfConfig":"61"},{"size":10972,"mtime":1622790985297,"results":"106","hashOfConfig":"61"},{"size":12817,"mtime":1622792634110,"results":"107","hashOfConfig":"61"},{"size":2002,"mtime":1622790917238,"results":"108","hashOfConfig":"61"},{"size":1545,"mtime":1622707408024,"results":"109","hashOfConfig":"61"},{"size":5971,"mtime":1622792488657,"results":"110","hashOfConfig":"61"},{"size":5471,"mtime":1622792472888,"results":"111","hashOfConfig":"61"},{"size":4943,"mtime":1622792573076,"results":"112","hashOfConfig":"61"},{"size":2777,"mtime":1622615656000,"results":"113","hashOfConfig":"61"},{"size":12030,"mtime":1622738996000,"results":"114","hashOfConfig":"61"},{"size":7516,"mtime":1622706612000,"results":"115","hashOfConfig":"61"},{"size":4329,"mtime":1619653180000,"results":"116","hashOfConfig":"61"},{"size":2792,"mtime":1622625810000,"results":"117","hashOfConfig":"61"},{"size":11592,"mtime":1622778974000,"results":"118","hashOfConfig":"61"},{"size":1634,"mtime":1622778998000,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1x49jox",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"122"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"122"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nikhil/Desktop/scm_project/src/index.js",[],["249","250"],"/home/nikhil/Desktop/scm_project/src/App.js",[],"/home/nikhil/Desktop/scm_project/src/components/Navbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/Dropdown.js",[],"/home/nikhil/Desktop/scm_project/src/components/Button.js",[],["251","252"],"/home/nikhil/Desktop/scm_project/src/components/MenuItems.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Investor.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Farmer.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Distributor.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Retailer.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Storage.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Transporter.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/AgroConsultant.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/ContactUs.js",["253"],"/* eslint-disable react/jsx-pascal-case */\r\nimport React from \"react\";\r\nimport Navbar_GM from \"./Navbar_GM\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport nikhil from \"./media/nikhil.jpeg\";\r\nimport bharath from \"./media/bharath.jpg\";\r\nimport abhishek from \"./media/abhishek.jpeg\";\r\nimport hetav from \"./media/hetav.jpeg\";\r\nimport lohith from \"./media/lohit.jpeg\";\r\n\r\n\r\nexport default function ContactUs() {\r\n\r\n\r\n  const cardInfo = [\r\n    { image: nikhil, title: \"Nikhil C\", phoneno: \"+918088631797\" , email : \"nikhil.c@bmsce.ac.in\"},\r\n    { image: bharath, title: \"Bharath kumar\", phoneno: \"+918317450757\",  email : \"bharathkumar@bmsce.ac.in\"},\r\n    { image: abhishek, title: \"Abhishek H\", phoneno: \"+919740133236\", email : \"abhishekh@bmsce.ac.in\" },\r\n    { image: hetav, title: \"Hetav\", phoneno: \"+919409492522\", email : \"hetavpabari@bmsce.ac.in\" },\r\n    \r\n  ];\r\n\r\n  const mentor = [{ image: lohith, title: \"Prof. Lohith \", phoneno: \"+919886745882\", email : \"lohith.cse@bmsce.ac.in\" }]\r\n\r\n  const renderCard = (card, index) => {\r\n    return (\r\n      <Card style={{ width: '25rem'}} key={index} className=\"box\">\r\n        <Card.Img variant=\"top\" src=\"holder.js/100px180\" src={card.image} />\r\n        <Card.Body>\r\n          <br />\r\n          <center><Card.Title>{card.title}</Card.Title></center>\r\n          <center><Card.Subtitle className=\"mb-2 text-muted\">Phone Number  : {card.phoneno}</Card.Subtitle></center>\r\n          <center><Card.Subtitle className=\"mb-2 text-muted\">Email address  : {card.email}</Card.Subtitle></center>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar_GM />\r\n      <div className=\"textHeading\">Team Members</div>\r\n      <div className=\"grid\">\r\n        {cardInfo.map(renderCard)}\r\n      </div>\r\n      <div className=\"textHeading\">Mentor</div>\r\n      <div className=\"grid\">\r\n        {mentor.map(renderCard)}\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n","/home/nikhil/Desktop/scm_project/src/components/pages/Instructions.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Home.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Navbar_GM.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/login/login.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/main/main.js",[],"/home/nikhil/Desktop/scm_project/src/components/Firebase/index.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/main/MainNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/main/UnverifiedUsers.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerHome.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerProfile.js",["254","255","256"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\nimport {toast} from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\ntoast.configure()\r\n\r\nclass FarmerProfile extends Component {\r\n    async componentWillMount() {\r\n      let account_contract;\r\n      (async function () {\r\n        await loadWeb3();\r\n        \r\n      })().then(() =>{\r\n      \r\n      });\r\n      (async function () {\r\n        account_contract = await loadBlockchainData(\"UserData\");\r\n      })().then(() => {\r\n        \r\n        console.log(\"account :\",account_contract[0]);\r\n        console.log(\"contract :\",account_contract[1]);\r\n        this.setState({ account: account_contract[0] });\r\n        this.setState({ contract: account_contract[1] });\r\n        this.fetchUserDetails();\r\n      });\r\n    }\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        userName: \"\",\r\n        publickey: \"\",\r\n        address : \"\",\r\n        contactno :\"\",\r\n        email : \"\",\r\n        document : \"\",\r\n      };\r\n      \r\n    }\r\n    fetchUserDetails() {\r\n      console.log(this.props.match.params.publicKey);\r\n      this.state.contract.methods\r\n        .get_signup(this.props.match.params.publickey)\r\n        .call({ from: this.state.account })\r\n        .then((ipfs_hash) => {\r\n          console.log(\"hash from solidity\", ipfs_hash);\r\n          ipfs.cat(ipfs_hash, (error, result) => {\r\n            if (result === undefined) {\r\n              toast(\"There is an issue with your credentials\");\r\n              return;\r\n            }\r\n            let userData = JSON.parse(result.toString());\r\n            console.log(\"ipfs result\", userData);\r\n            this.setState({\r\n              userName: userData.First_Name + \" \" + userData.Last_Name,\r\n              publickey: userData.PublicKey,\r\n              address : userData.Address,\r\n              contactno : userData.ContactNo,\r\n              email : userData.Email,\r\n              document : userData.Document,\r\n\r\n            });\r\n          });\r\n        });\r\n    }\r\n  \r\n   \r\n  \r\n    render() {\r\n      \r\n  \r\n      return (\r\n        <div class=\"wrapper_pro\">\r\n          <div className=\"form-wrapper_pro_head\">\r\n          <h1> Farmer Profile Page </h1>\r\n          </div>\r\n        <div className=\"form-wrapper_pro\">\r\n          \r\n          <div>\r\n            <h1>Farmer Name : {this.state.userName}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Pulic Key: {this.state.publickey}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Address : {this.state.address}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Contact Number : {this.state.contactno}</h1>\r\n          </div>\r\n          <div>\r\n           <h1>Uploaded Documents : <a href = {this.state.document} target = \"_blank\">Click here</a></h1>\r\n          </div>\r\n          <div>\r\n            <h1>Email Id : {this.state.email}</h1>\r\n          </div>\r\n          <div>\r\n         <Link to={\"/FarmerEditProfile/\"+this.state.publickey}> <button class=\"edit_button_pro\">Edit Profile</button></Link>\r\n          </div>\r\n          \r\n         </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default FarmerProfile;\r\n  ","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/ProposeCrops.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/CropsStatus.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/ApproveCrops.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/BookConsultant.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantHome.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AcceptOffer.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/RateCrops.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/RateFarmer.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/SecurityDeposit.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Web3/web3Component.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Supplier.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierHome.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/EditCommodities.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/ManageCommodities.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/BuySupplies.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantProfile.js",["257","258"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\nimport {toast} from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\ntoast.configure()\r\n\r\nclass AgroConsultantProfile extends Component {\r\n    async componentWillMount() {\r\n      let account_contract;\r\n      (async function () {\r\n        await loadWeb3();\r\n        \r\n      })().then(() =>{\r\n      \r\n      });\r\n      (async function () {\r\n        account_contract = await loadBlockchainData(\"UserData\");\r\n      })().then(() => {\r\n        \r\n        console.log(\"account :\",account_contract[0]);\r\n        console.log(\"contract :\",account_contract[1]);\r\n        this.setState({ account: account_contract[0] });\r\n        this.setState({ contract: account_contract[1] });\r\n        this.fetchUserDetails();\r\n      });\r\n    }\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        userName: \"\",\r\n        address : \"\",\r\n        contactno :\"\",\r\n        email : \"\",\r\n        collegename:\"\",\r\n        qualification :\"\",\r\n        publickey : \"\",\r\n      };\r\n      \r\n    }\r\n    fetchUserDetails() {\r\n      this.state.contract.methods\r\n        .get_signup(this.props.match.params.publickey)\r\n        .call({ from: this.state.account })\r\n        .then((ipfs_hash) => {\r\n          console.log(\"hash from solidity\", ipfs_hash);\r\n          ipfs.cat(ipfs_hash, (error, result) => {\r\n            if (result === undefined) {\r\n              toast(\"There is an issue with your credentials\");\r\n              return;\r\n            }\r\n            let userData = JSON.parse(result.toString());\r\n            console.log(\"ipfs result\", userData);\r\n            this.setState({\r\n              userName: userData.First_Name + \" \" + userData.Last_Name,\r\n              address : userData.Address,\r\n              contactno : userData.ContactNo,\r\n              email : userData.Email,\r\n              collegename : userData.CollegeName,\r\n              qualification : userData.Qualification,\r\n              publickey : userData.PublicKey,\r\n\r\n            });\r\n          });\r\n        });\r\n    }\r\n  \r\n   \r\n  \r\n    render() {\r\n      \r\n  \r\n      return (\r\n        <div class=\"wrapper_pro\">\r\n          <div className=\"form-wrapper_pro_head\">\r\n          <h1> Agro Consultant Profile Page </h1>\r\n          </div>\r\n        <div className=\"form-wrapper_pro\">\r\n            <h1>Agro Consultant Name : {this.state.userName}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Address : {this.state.address}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Contact Number : {this.state.contactno}</h1>\r\n          </div>\r\n          <div>\r\n            <h1> College Name : {this.state.collegename}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Qualification {this.state.qualification}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Email Id : {this.state.email}</h1>\r\n          </div>\r\n          <div>\r\n         <Link to={\"/AgroConsultantEditProfile/\"+this.state.publickey}> <button class=\"edit_button_pro\">Edit Profile</button></Link>\r\n          </div>\r\n          \r\n         \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default AgroConsultantProfile;\r\n  ","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierProfile.js",["259","260"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\nimport {toast} from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\ntoast.configure()\r\n\r\nclass AgroConsultantProfile extends Component {\r\n  async componentWillMount() {\r\n    let account_contract;\r\n    (async function () {\r\n      await loadWeb3();\r\n    })().then(() => {});\r\n    (async function () {\r\n      account_contract = await loadBlockchainData(\"UserData\");\r\n    })().then(() => {\r\n      console.log(\"account :\", account_contract[0]);\r\n      console.log(\"contract :\", account_contract[1]);\r\n      this.setState({ account: account_contract[0] });\r\n      this.setState({ contract: account_contract[1] });\r\n      this.fetchUserDetails();\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userName: \"\",\r\n      address: \"\",\r\n      contactno: \"\",\r\n      publickey: \"\",\r\n      email: \"\",\r\n      specialisation: \"\",\r\n    };\r\n  }\r\n  fetchUserDetails() {\r\n    this.state.contract.methods\r\n      .get_signup(this.props.match.params.publickey)\r\n      .call({ from: this.state.account })\r\n      .then((ipfs_hash) => {\r\n        console.log(\"hash from solidity\", ipfs_hash);\r\n        ipfs.cat(ipfs_hash, (error, result) => {\r\n          if (result === undefined) {\r\n            toast(\"There is an issue with your credentials\");\r\n            return;\r\n          }\r\n          let userData = JSON.parse(result.toString());\r\n          console.log(\"ipfs result\", userData);\r\n          this.setState({\r\n            userName: userData.First_Name + \" \" + userData.Last_Name,\r\n            address: userData.Address,\r\n            contactno: userData.ContactNo,\r\n            email: userData.Email,\r\n            specialisation: userData.Specialisation,\r\n            publickey: userData.PublicKey,\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"wrapper_pro\">\r\n        <div className=\"form-wrapper_pro_head\">\r\n          <h1> Supplier Profile Page </h1>\r\n        </div>\r\n        <div className=\"form-wrapper_pro\">\r\n          <h1>Supplier Profile Page </h1>\r\n          <div>\r\n            <h1>Supplier Name : {this.state.userName}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Address : {this.state.address}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Contact Number : {this.state.contactno}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Specialisation : {this.state.specialisation}</h1>\r\n          </div>\r\n\r\n          <div>\r\n            <h1>Email Id : {this.state.email}</h1>\r\n          </div>\r\n          <div>\r\n            <Link to={\"/SupplierEditProfile/\" + this.state.publickey}>\r\n              {\" \"}\r\n              <button class=\"edit_button_pro\">Edit Profile</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgroConsultantProfile;\r\n","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierEditProfile.js",["261","262","263","264","265","266"],"import React, { Component, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\nimport {toast} from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\ntoast.configure()\r\n\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\nconst contactRegex = RegExp(/^\\d{10}$/);\r\nconst publickeyRegex = RegExp(/^[0-9A-Za-z]{42}-[a-zA-Z0-9]+$/);\r\nconst passRegex = RegExp(\r\n  // eslint-disable-next-line no-useless-escape\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\r\n);\r\n\r\nclass SupplierEditProfile extends Component {\r\n  async componentWillMount() {\r\n    let account_contract;\r\n    (async function () {\r\n      await loadWeb3();\r\n      \r\n    })().then(() =>{\r\n    \r\n    });\r\n    (async function () {\r\n      account_contract = await loadBlockchainData(\"UserData\");\r\n    })().then(() => {\r\n      \r\n      console.log(\"account :\",account_contract[0]);\r\n      console.log(\"contract :\",account_contract[1]);\r\n      this.setState({ account: account_contract[0] });\r\n      this.setState({ contract: account_contract[1] });\r\n      this.fetchUserDetails();\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      password: null,\r\n      contactno: null,\r\n      publickey: \"\",\r\n      address: null,\r\n      specialisation: null,\r\n      role: \"Farmer\",\r\n      verified: \"not verified\",\r\n      image: null,\r\n      progress: 0,\r\n      url: \"\",\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        specialisation :\"\",\r\n        password: \"\",\r\n        contactno: \"\",\r\n        publickey: \"\",\r\n        address: \"\",\r\n      },\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setProgress = this.setProgress.bind(this);\r\n    this.setUrl = this.setUrl.bind(this);\r\n    this.captureFile = this.captureFile.bind(this);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(`--SUBMITTING-- : `);\r\n      \r\n            let signup_info = {\r\n              First_Name: this.state.firstName,\r\n              Last_Name: this.state.lastName,\r\n              Address: this.state.address,\r\n              Email: this.state.email,\r\n              ContactNo: this.state.contactno,\r\n              Document: this.state.url,\r\n              Specialisation: this.state.specialisation,\r\n              Password: this.state.password,\r\n              PublicKey: this.state.publickey,\r\n              Role: this.state.role,\r\n              Verified: this.state.verified,\r\n              \r\n            };\r\n            console.log(\"Signup info:  \", signup_info);\r\n            let signup_string = JSON.stringify(signup_info);\r\n\r\n            let ipfs_sign_up = Buffer(signup_string);\r\n            console.log(\"Submitting file to ipfs...\");\r\n\r\n           ipfs.add(ipfs_sign_up, (error, result) => {\r\n              console.log(\"Ipfs result\", result);\r\n              if (error) {\r\n                console.error(error);\r\n                return;\r\n              } else {\r\n                console.log(\"sending hash to contract\");\r\n                this.state.contract.methods\r\n                  .set_signup(this.state.publickey, result[0].hash)\r\n                  .send({ from: this.state.account }, (res) => {\r\n                    console.log(\"res :\",res);\r\n                    if (res === false) {\r\n                      toast(\"Your Profile is Updated\");\r\n                    }\r\n                  });\r\n              }\r\n            });\r\n         \r\n      \r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName =\r\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"lastName\":\r\n        formErrors.lastName =\r\n          value.length < 1 ? \"minimum 1 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"address\":\r\n        formErrors.address =\r\n          value.length < 1 ? \"Please enter your address\" : \"\";\r\n        break;\r\n\r\n        case \"specialisation\":\r\n        formErrors.specialisation =\r\n          value.length < 1 ? \"Please enter your specialisation\" : \"\";\r\n        break;\r\n\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid email address\";\r\n        break;\r\n\r\n      case \"contactno\":\r\n        formErrors.contactno = contactRegex.test(value)\r\n          ? \"\"\r\n          : \"Exactly 10 numbers are required\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  setProgress = (prog) => {\r\n    this.setState({\r\n      progress: prog,\r\n    });\r\n  };\r\n\r\n  setUrl = (link) => {\r\n    this.setState({\r\n      url: link,\r\n    });\r\n  };\r\n\r\n  captureFile = (event) => {\r\n    event.preventDefault();\r\n\r\n    const file = event.target.files[0];\r\n    console.log(\"image\", file);\r\n    this.setState(\r\n      function (prevState, props) {\r\n        return {\r\n          image: file,\r\n        };\r\n      },\r\n      () => {\r\n        console.log(\"image\", this.state.image);\r\n        const uploadTask = storage\r\n          .ref(`${this.state.role}/${this.state.image.name}`)\r\n          .put(this.state.image);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setProgress(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(`${this.state.role}`)\r\n              .child(this.state.image.name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                this.setUrl(url);\r\n              });\r\n            toast(\"Upload Complete\");\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  fetchUserDetails() {\r\n    this.state.contract.methods\r\n      .get_signup(this.props.match.params.publickey)\r\n      .call({ from: this.state.account })\r\n      .then((ipfs_hash) => {\r\n        console.log(\"hash from solidity\", ipfs_hash);\r\n        ipfs.cat(ipfs_hash, (error, result) => {\r\n          if (result === undefined) {\r\n            toast(\"There is an issue with your credentials\");\r\n            return;\r\n          }\r\n          let userData = JSON.parse(result.toString());\r\n          console.log(\"fetched user details :\", userData);\r\n          this.setState({\r\n            firstName : userData.First_Name,\r\n            lastName : userData.Last_Name,\r\n            publickey: userData.PublicKey,\r\n            address : userData.Address,\r\n            contactno : userData.ContactNo,\r\n            email : userData.Email,\r\n            url : userData.Document,\r\n            role : userData.Role,\r\n            password : userData.Password,\r\n            verified : userData.Verified,\r\n            specialisation : userData.Specialisation,\r\n\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"form-wrapper\">\r\n          <h1>Edit Profile - Farmer </h1>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            <div className=\"firstName\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input\r\n                className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.firstName}\r\n                name=\"firstName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.firstName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"lastName\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input\r\n                className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.lastName}\r\n                name=\"lastName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.lastName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"email\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                className={formErrors.email.length > 0 ? \"error\" : null}\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                name=\"email\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.email.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.email}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"contact_no\">\r\n              <label htmlFor=\"email\">Contact Number</label>\r\n              <input\r\n                className={formErrors.contactno.length > 0 ? \"error\" : null}\r\n                type=\"contactno\"\r\n                value={this.state.contactno}\r\n                name=\"contactno\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.contactno.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.contactno}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"specialisation\">\r\n              <label htmlFor=\"email\">Specialisation</label>\r\n              <input\r\n                className={\r\n                  formErrors.specialisation.length > 0 ? \"error\" : null\r\n                }\r\n                value = {this.state.specialisation}\r\n                type=\"text\"\r\n                name=\"specialisation\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.specialisation.length > 0 && (\r\n                <span className=\"errorMessage\">\r\n                  {formErrors.specialisation}\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"address\">\r\n              <label htmlFor=\"email\">Address</label>\r\n              <input\r\n                className={formErrors.address.length > 0 ? \"error\" : null}\r\n                value={this.state.address}\r\n                type=\"text\"\r\n                name=\"address\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.address.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.address}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Uploaded Documents</label>\r\n              \r\n            <a href = {this.state.url} target = \"_blank\">Click here to view Uploaded Documents</a>\r\n        \r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Upload Documents  ** If you want to update the documents **</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"application/pdf\"\r\n                onChange={this.captureFile}\r\n              />\r\n              {<progress value={this.state.progress} max=\"100\" />}\r\n            </div>\r\n\r\n            <div className=\"createAccount\">\r\n              <button type=\"submit\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SupplierEditProfile;\r\n","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerEditProfile.js",["267","268","269","270","271","272"],"import React, { Component, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\nimport {toast} from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\ntoast.configure()\r\n\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\nconst contactRegex = RegExp(/^\\d{10}$/);\r\nconst publickeyRegex = RegExp(/^[0-9A-Za-z]{42}-[a-zA-Z0-9]+$/);\r\nconst passRegex = RegExp(\r\n  // eslint-disable-next-line no-useless-escape\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\r\n);\r\n\r\nclass FarmerEditProfile extends Component {\r\n  async componentWillMount() {\r\n    let account_contract;\r\n    (async function () {\r\n      await loadWeb3();\r\n      \r\n    })().then(() =>{\r\n    \r\n    });\r\n    (async function () {\r\n      account_contract = await loadBlockchainData(\"UserData\");\r\n    })().then(() => {\r\n      \r\n      console.log(\"account :\",account_contract[0]);\r\n      console.log(\"contract :\",account_contract[1]);\r\n      this.setState({ account: account_contract[0] });\r\n      this.setState({ contract: account_contract[1] });\r\n      this.fetchUserDetails();\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      password: null,\r\n      contactno: null,\r\n      publickey: \"\",\r\n      address: null,\r\n      role: \"Farmer\",\r\n      verified: \"not verified\",\r\n      image: null,\r\n      progress: 0,\r\n      url: \"\",\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        contactno: \"\",\r\n        publickey: \"\",\r\n        address: \"\",\r\n      },\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setProgress = this.setProgress.bind(this);\r\n    this.setUrl = this.setUrl.bind(this);\r\n    this.captureFile = this.captureFile.bind(this);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(`--SUBMITTING-- : `);\r\n      \r\n            let signup_info = {\r\n              First_Name: this.state.firstName,\r\n              Last_Name: this.state.lastName,\r\n              Address: this.state.address,\r\n              Email: this.state.email,\r\n              ContactNo: this.state.contactno,\r\n\r\n              Document: this.state.url,\r\n\r\n              Password: this.state.password,\r\n              PublicKey: this.state.publickey,\r\n              Role: this.state.role,\r\n              Verified: this.state.verified,\r\n              \r\n            };\r\n            console.log(\"Signup info:  \", signup_info);\r\n            let signup_string = JSON.stringify(signup_info);\r\n\r\n            let ipfs_sign_up = Buffer(signup_string);\r\n            console.log(\"Submitting file to ipfs...\");\r\n\r\n           ipfs.add(ipfs_sign_up, (error, result) => {\r\n              console.log(\"Ipfs result\", result);\r\n              if (error) {\r\n                console.error(error);\r\n                return;\r\n              } else {\r\n                console.log(\"sending hash to contract\");\r\n                this.state.contract.methods\r\n                  .set_signup(this.state.publickey, result[0].hash)\r\n                  .send({ from: this.state.account }, (res) => {\r\n                    console.log(\"res :\",res);\r\n                    if (res === false) {\r\n                      toast(\"Your Profile is Updated\");\r\n                    }\r\n                  });\r\n              }\r\n            });\r\n         \r\n      \r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName =\r\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"lastName\":\r\n        formErrors.lastName =\r\n          value.length < 1 ? \"minimum 1 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"address\":\r\n        formErrors.address =\r\n          value.length < 1 ? \"Please enter your address\" : \"\";\r\n        break;\r\n\r\n\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid email address\";\r\n        break;\r\n\r\n      case \"contactno\":\r\n        formErrors.contactno = contactRegex.test(value)\r\n          ? \"\"\r\n          : \"Exactly 10 numbers are required\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  setProgress = (prog) => {\r\n    this.setState({\r\n      progress: prog,\r\n    });\r\n  };\r\n\r\n  setUrl = (link) => {\r\n    this.setState({\r\n      url: link,\r\n    });\r\n  };\r\n\r\n  captureFile = (event) => {\r\n    event.preventDefault();\r\n\r\n    const file = event.target.files[0];\r\n    console.log(\"image\", file);\r\n    this.setState(\r\n      function (prevState, props) {\r\n        return {\r\n          image: file,\r\n        };\r\n      },\r\n      () => {\r\n        console.log(\"image\", this.state.image);\r\n        const uploadTask = storage\r\n          .ref(`${this.state.role}/${this.state.image.name}`)\r\n          .put(this.state.image);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setProgress(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(`${this.state.role}`)\r\n              .child(this.state.image.name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                this.setUrl(url);\r\n              });\r\n            toast(\"Upload Complete\");\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  fetchUserDetails() {\r\n    this.state.contract.methods\r\n      .get_signup(this.props.match.params.publickey)\r\n      .call({ from: this.state.account })\r\n      .then((ipfs_hash) => {\r\n        console.log(\"hash from solidity\", ipfs_hash);\r\n        ipfs.cat(ipfs_hash, (error, result) => {\r\n          if (result === undefined) {\r\n            toast(\"There is an issue with your credentials\");\r\n            return;\r\n          }\r\n          let userData = JSON.parse(result.toString());\r\n          console.log(\"fetched user details :\", userData);\r\n          this.setState({\r\n            firstName : userData.First_Name,\r\n            lastName : userData.Last_Name,\r\n            publickey: userData.PublicKey,\r\n            address : userData.Address,\r\n            contactno : userData.ContactNo,\r\n            email : userData.Email,\r\n            url : userData.Document,\r\n            role : userData.Role,\r\n            password : userData.Password,\r\n            verified : userData.Verified,\r\n\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"form-wrapper\">\r\n          <h1>Edit Profile - Farmer </h1>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            <div className=\"firstName\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input\r\n                className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.firstName}\r\n                name=\"firstName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.firstName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"lastName\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input\r\n                className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.lastName}\r\n                name=\"lastName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.lastName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"email\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                className={formErrors.email.length > 0 ? \"error\" : null}\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                name=\"email\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.email.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.email}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"contact_no\">\r\n              <label htmlFor=\"email\">Contact Number</label>\r\n              <input\r\n                className={formErrors.contactno.length > 0 ? \"error\" : null}\r\n                type=\"contactno\"\r\n                value={this.state.contactno}\r\n                name=\"contactno\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.contactno.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.contactno}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"address\">\r\n              <label htmlFor=\"email\">Address</label>\r\n              <input\r\n                className={formErrors.address.length > 0 ? \"error\" : null}\r\n                value={this.state.address}\r\n                type=\"text\"\r\n                name=\"address\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.address.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.address}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Uploaded Documents</label>\r\n              \r\n            <a href = {this.state.url} target = \"_blank\">Click here to view Uploaded Documents</a>\r\n        \r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Upload Documents  ** If you want to update the documents **</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"application/pdf\"\r\n                onChange={this.captureFile}\r\n              />\r\n              {<progress value={this.state.progress} max=\"100\" />}\r\n            </div>\r\n\r\n            <div className=\"createAccount\">\r\n              <button type=\"submit\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FarmerEditProfile;\r\n","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantEditProfile.js",["273","274","275","276"],"import React, { Component} from \"react\";\r\n\r\nimport {toast} from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\n\r\n\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\ntoast.configure();\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\nconst contactRegex = RegExp(/^\\d{10}$/);\r\nconst publickeyRegex = RegExp(/^[0-9A-Za-z]{42}-[a-zA-Z0-9]+$/);\r\nconst passRegex = RegExp(\r\n  // eslint-disable-next-line no-useless-escape\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\r\n);\r\n\r\nclass AgroConsultantEditProfile extends Component {\r\n  async componentWillMount() {\r\n    let account_contract;\r\n    (async function () {\r\n      await loadWeb3();\r\n      \r\n    })().then(() =>{\r\n    \r\n    });\r\n    (async function () {\r\n      account_contract = await loadBlockchainData(\"UserData\");\r\n    })().then(() => {\r\n      \r\n      console.log(\"account :\",account_contract[0]);\r\n      console.log(\"contract :\",account_contract[1]);\r\n      this.setState({ account: account_contract[0] });\r\n      this.setState({ contract: account_contract[1] });\r\n      this.fetchUserDetails();\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      password: null,\r\n      contactno: null,\r\n      collegename:null,\r\n      qualification:null,\r\n      publickey: \"\",\r\n      address: null,\r\n      role: \"Farmer\",\r\n      verified: \"not verified\",\r\n      image: null,\r\n      progress: 0,\r\n      url: \"\",\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        contactno: \"\",\r\n        publickey: \"\",\r\n        qualification :\"\",\r\n        collegename : \"\",\r\n        address: \"\",\r\n      },\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setProgress = this.setProgress.bind(this);\r\n    this.setUrl = this.setUrl.bind(this);\r\n    this.captureFile = this.captureFile.bind(this);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(`--SUBMITTING-- : `);\r\n      \r\n            let signup_info = {\r\n              First_Name: this.state.firstName,\r\n              Last_Name: this.state.lastName,\r\n              Address: this.state.address,\r\n              Email: this.state.email,\r\n              ContactNo: this.state.contactno,\r\n              Document: this.state.url,\r\n              Password: this.state.password,\r\n              PublicKey: this.state.publickey,\r\n              Role: this.state.role,\r\n              Verified: this.state.verified,\r\n              Qualification: this.state.qualification,\r\n              CollegeName: this.state.collegename,\r\n              \r\n            };\r\n            console.log(\"Signup info:  \", signup_info);\r\n            let signup_string = JSON.stringify(signup_info);\r\n\r\n            let ipfs_sign_up = Buffer(signup_string);\r\n            console.log(\"Submitting file to ipfs...\");\r\n\r\n           ipfs.add(ipfs_sign_up, (error, result) => {\r\n              console.log(\"Ipfs result\", result);\r\n              if (error) {\r\n                console.error(error);\r\n                return;\r\n              } else {\r\n                console.log(\"sending hash to contract\");\r\n                this.state.contract.methods\r\n                  .set_signup(this.state.publickey, result[0].hash)\r\n                  .send({ from: this.state.account }, (res) => {\r\n                    console.log(\"res :\",res);\r\n                    if (res === false) {\r\n                      toast(\"Your Profile is Updated\",{position: toast.POSITION.TOP_CENTER, className:\"toast\"});\r\n                    }\r\n                  });\r\n              }\r\n            });\r\n         \r\n      \r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName =\r\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"lastName\":\r\n        formErrors.lastName =\r\n          value.length < 1 ? \"minimum 1 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"address\":\r\n        formErrors.address =\r\n          value.length < 1 ? \"Please enter your address\" : \"\";\r\n        break;\r\n\r\n\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid email address\";\r\n        break;\r\n\r\n        case \"qualification\":\r\n        formErrors.qualification =\r\n          value.length < 1 ? \"Please enter your qualification\" : \"\";\r\n        break;\r\n\r\n      case \"collegename\":\r\n        formErrors.collegename =\r\n          value.length < 1 ? \"Please enter your collegename\" : \"\";\r\n        break;\r\n\r\n      case \"contactno\":\r\n        formErrors.contactno = contactRegex.test(value)\r\n          ? \"\"\r\n          : \"Exactly 10 numbers are required\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  setProgress = (prog) => {\r\n    this.setState({\r\n      progress: prog,\r\n    });\r\n  };\r\n\r\n  setUrl = (link) => {\r\n    this.setState({\r\n      url: link,\r\n    });\r\n  };\r\n\r\n  captureFile = (event) => {\r\n    event.preventDefault();\r\n\r\n    const file = event.target.files[0];\r\n    console.log(\"image\", file);\r\n    this.setState(\r\n      function (prevState, props) {\r\n        return {\r\n          image: file,\r\n        };\r\n      },\r\n      () => {\r\n        console.log(\"image\", this.state.image);\r\n        const uploadTask = storage\r\n          .ref(`${this.state.role}/${this.state.image.name}`)\r\n          .put(this.state.image);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setProgress(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(`${this.state.role}`)\r\n              .child(this.state.image.name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                this.setUrl(url);\r\n              });\r\n            toast(\"Upload Complete\");\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  fetchUserDetails() {\r\n    this.state.contract.methods\r\n      .get_signup(this.props.match.params.publickey)\r\n      .call({ from: this.state.account })\r\n      .then((ipfs_hash) => {\r\n        console.log(\"hash from solidity\", ipfs_hash);\r\n        ipfs.cat(ipfs_hash, (error, result) => {\r\n          if (result === undefined) {\r\n            toast(\"There is an issue with your credentials\");\r\n            return;\r\n          }\r\n          let userData = JSON.parse(result.toString());\r\n          console.log(\"fetched user details :\", userData);\r\n          this.setState({\r\n            firstName : userData.First_Name,\r\n            lastName : userData.Last_Name,\r\n            publickey: userData.PublicKey,\r\n            address : userData.Address,\r\n            contactno : userData.ContactNo,\r\n            email : userData.Email,\r\n            url : userData.Document,\r\n            role : userData.Role,\r\n            password : userData.Password,\r\n            verified : userData.Verified,\r\n            collegename : userData.CollegeName,\r\n            qualification : userData.Qualification,\r\n\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"form-wrapper\">\r\n          <h1> Edit Profile - Agro Consultant </h1>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            <div className=\"firstName\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input\r\n                className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.firstName}\r\n                name=\"firstName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.firstName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"lastName\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input\r\n                className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.lastName}\r\n                name=\"lastName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.lastName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"email\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                className={formErrors.email.length > 0 ? \"error\" : null}\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                name=\"email\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.email.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.email}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"contact_no\">\r\n              <label htmlFor=\"email\">Contact Number</label>\r\n              <input\r\n                className={formErrors.contactno.length > 0 ? \"error\" : null}\r\n                type=\"contactno\"\r\n                value={this.state.contactno}\r\n                name=\"contactno\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.contactno.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.contactno}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"qualification\">\r\n              <label htmlFor=\"email\">Highest qualification</label>\r\n              <input\r\n                className={formErrors.qualification.length > 0 ? \"error\" : null}\r\n                value = {this.state.qualification}\r\n                type=\"text\"\r\n                name=\"qualification\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.qualification.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.qualification}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"collegename\">\r\n              <label htmlFor=\"email\">College Name</label>\r\n              <input\r\n                className={formErrors.collegename.length > 0 ? \"error\" : null}\r\n                value = {this.state.collegename}\r\n                type=\"text\"\r\n                name=\"collegename\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.collegename.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.collegename}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"address\">\r\n              <label htmlFor=\"email\">Address</label>\r\n              <input\r\n                className={formErrors.address.length > 0 ? \"error\" : null}\r\n                value={this.state.address}\r\n                type=\"text\"\r\n                name=\"address\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.address.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.address}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Uploaded Documents</label>\r\n              \r\n            <a href = {this.state.url} target = \"_blank\">Click here to view Uploaded Documents</a>\r\n        \r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Upload Documents  ** If you want to update the documents **</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"application/pdf\"\r\n                onChange={this.captureFile}\r\n              />\r\n              {<progress value={this.state.progress} max=\"100\" />}\r\n            </div>\r\n\r\n            <div className=\"createAccount\">\r\n              <button type=\"submit\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgroConsultantEditProfile;\r\n","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/DistributorHome.js",["277"],"import React, { Component } from \"react\";\r\nimport DistributorNavbar from \"./DistributorNavbar\";\r\nimport \"./Distributor.css\";\r\nimport { ipfs, loadWeb3, loadBlockchainData } from \"../Web3/web3Component\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {toast} from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\ntoast.configure()\r\n\r\nexport default class DistributorHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userData: [],\r\n      userName: \"\",\r\n      publickey: \"\",\r\n    };\r\n  }\r\n\r\n  async componentWillMount() {\r\n    let account_contract;\r\n    (async function () {\r\n      await loadWeb3();\r\n    })();\r\n    (async function () {\r\n      account_contract = await loadBlockchainData(\"UserData\");\r\n    })().then(() => {\r\n      console.log(account_contract);\r\n      this.setState({ account: account_contract[0] });\r\n      this.setState({ contract: account_contract[1] });\r\n      this.fetchUsername()\r\n    });\r\n  }\r\n\r\n  fetchUsername() {\r\n    this.state.contract.methods\r\n      .get_signup(this.props.match.params.publickey)\r\n      .call({ from: this.state.account })\r\n      .then((ipfs_hash) => {\r\n        console.log(\"hash from solidity\", ipfs_hash);\r\n        ipfs.cat(ipfs_hash, (error, result) => {\r\n          if (result === undefined) {\r\n            toast(\"There is an issue with your credentials\");\r\n            return;\r\n          }\r\n          let userData = JSON.parse(result.toString());\r\n          console.log(\"ipfs result\", userData);\r\n          this.setState({\r\n            userName: userData.First_Name + \" \" + userData.Last_Name,\r\n            publickey: userData.PublicKey,\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"bg1\">\r\n          <DistributorNavbar\r\n            username={this.state.userName}\r\n            publicKey={this.state.publickey}\r\n          />\r\n        </div>\r\n\r\n       <div>\r\n           <h1>works</h1>\r\n       </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/DistributorNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/hireTransporter.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/buyGoods.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/main/ViewExisting.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Investor/InvestorHome.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Investor/ActiveFunding.js",["278","279","280"],"/home/nikhil/Desktop/scm_project/src/components/pages/Investor/UnFundedCrops.js",["281","282"],"/home/nikhil/Desktop/scm_project/src/components/pages/Investor/InvestorNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Transporter/TransporterHome.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Transporter/TransportRequest.js",["283","284","285","286"],"import React, { Component } from 'react';\r\nimport TransporterNavbar from './TransporterNavbar';\r\nimport Web3 from \"web3\";\r\nimport \"./Transporter.css\";\r\nimport Scm from \"../../../abis/UserData.json\";\r\nimport * as Utils from 'web3-utils';\r\n\r\nconst ipfsClient = require(\"ipfs-api\");\r\nconst ipfs = ipfsClient({\r\n  host: \"ipfs.infura.io\",\r\n  port: 5001,\r\n  apiPath: \"/api/v0\",\r\n  protocol: \"https\",\r\n});\r\n\r\nclass TransportRequest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          UnverifiedData: [],\r\n          // rr:[\r\n          //   {\r\n          //       \"cropId\": \t\"0x4322EcbD8d43421a77Ec6F0AF0E6CA866e2A3CEd-bha779\",\r\n          //       \"retailerId\": \t\"0x4322EcbD8d43421a77Ec6F0AF0E6CA866e2A3CEd-bha776\",\r\n          //       \"pkm\": 5,\r\n          //       \"pkg\": 5,\r\n          //       \"km\": 2,\r\n          //       \"kg\": 2,\r\n          //       \"status\": \"waiting\"\r\n          //     },\r\n          //     {\r\n          //       \"cropId\": 555,\r\n          //       \"retailerId\": 999,\r\n          //       \"pkm\": 7,\r\n          //       \"pkg\": 7,\r\n          //       \"km\": 6,\r\n          //       \"kg\": 12,\r\n          //       \"status\": \"waiting\"\r\n          //     }\r\n          // ],\r\n        };\r\n    \r\n        this.rendertable = this.rendertable.bind(this);\r\n        this.renderTableData = this.renderTableData.bind(this);\r\n        this.transport = this.transport.bind(this);\r\n      }\r\n    \r\n      async componentWillMount() {\r\n        await this.loadWeb3();\r\n        await this.loadBlockchainData();\r\n        await this.rendertable();\r\n      }\r\n    \r\n      async loadWeb3() {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum);\r\n          await window.ethereum.enable();\r\n        } else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider);\r\n        } else {\r\n          window.alert(\r\n            \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n          );\r\n        }\r\n        console.log(\"web3  :\", window.web3);\r\n      }\r\n    \r\n      async loadBlockchainData() {\r\n        const web3 = window.web3;\r\n        const accounts = await web3.eth.getAccounts();\r\n        console.log(\"accounts loaded\"+accounts);\r\n        this.setState({ account: accounts[0] });\r\n        const networkId = await web3.eth.net.getId();\r\n        const networkData = Scm.networks[networkId];\r\n        if (networkData) {\r\n          const contract = web3.eth.Contract(Scm.abi, networkData.address);\r\n          this.setState({ contract });\r\n          console.log(\"block chain data loaded\");\r\n        } else {\r\n          window.alert(\"Smart contract not deployed to detected network.\");\r\n        }\r\n      }\r\n    \r\n      async rendertable() {\r\n        console.log(\"in render table\");\r\n        this.state.UnverifiedData = [];\r\n    \r\n        this.state.contract.methods.get_usernames\r\n          .call({ from: this.state.account })\r\n          .then((usernames) => {\r\n            usernames.map((username) => {\r\n              this.state.contract.methods\r\n                .get_signup(username)\r\n                .call({ from: this.state.account })\r\n                .then((ipfs_hash) => {\r\n                  ipfs.cat(ipfs_hash, (error, result) => {\r\n                    if (result !== undefined) {\r\n                      let userData = JSON.parse(result.toString());\r\n                      if (userData[\"Role\"] === \"Transporter\" && userData[\"PublicKey\"]===this.props.match.params.publickey) {\r\n                        this.setState(\r\n                          {\r\n                            UnverifiedData: this.state.UnverifiedData.concat([\r\n                              userData,\r\n                            ]),\r\n                          },\r\n                          () => {\r\n                            console.log(this.state.UnverifiedData);\r\n                          }\r\n                        );\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n            });\r\n            console.log(\"unverified data:\", this.state.UnverifiedData);\r\n          });\r\n      }\r\n    \r\n    //   renderTableData(record, index) {\r\n    //     console.log(\"in render table data\");\r\n    //     console.log(this.state.UnverifiedData);\r\n    //     return (\r\n    //       <tr className=\"active-row\" key={record.PublicKey}>\r\n    //         <td>{record.PublicKey}</td>\r\n    //         <td>{record.PublicKey}</td>\r\n    //         <td>{record.Role}</td>\r\n    //         <td>{record.Status}</td>\r\n    //         <td>{record.c1pkm*parseInt(record.km)+record.c1pkg*parseInt(record.kg)}</td>\r\n    //         <td>\r\n    //           <button\r\n    //             className=\"btn btn-danger\"\r\n    //             onClick={() => this.transport(record)}\r\n    //           >\r\n    //             Transport\r\n    //           </button>\r\n    //         </td>\r\n    //       </tr>\r\n    //     );\r\n    //   }\r\n\r\n      renderTableData(record, index) {\r\n        console.log(\"in render table data\");\r\n        console.log(\"--------\",record);\r\n        return (\r\n          <tr className=\"active-row\" key={record.PublicKey}>\r\n            <td>{record.PublicKey}</td>\r\n            {/* <td>{record.retailerId}</td>\r\n            <td>{record.km}</td>\r\n            <td>{record.kg}</td> \r\n            <td>{record.pkm*parseInt(record.km)+record.pkg*parseInt(record.kg)}</td>*/}\r\n            <td>{record.status}</td>\r\n            \r\n            <td>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => this.transport(record,(record.pkm*parseInt(record.km)+record.pkg*parseInt(record.kg)))}\r\n              >\r\n                Transport\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    \r\n      transport(record,ethers) {\r\n\r\n        console.log(\"record in Transport Request :\", record);\r\n        console.log(\"record in Transport Request :\", this.state.account);\r\n\r\n    // var allseeds = specialization.split(\",\");\r\n\r\n    // var seed_name_entered = prompt(\"enter seed name\");\r\n    // allseeds.forEach((val) => {\r\n    //   var brace_index = val.indexOf(\"(\");\r\n    //   var close_brace = val.indexOf(\")\");\r\n    //   if (seed_name_entered === val.slice(0, brace_index)) {\r\n    //     var x = specialization.indexOf(seed_name_entered);\r\n    //     x = x + seed_name_entered.length;\r\n    //     var brace_index1 = specialization.indexOf(\"(\", x);\r\n    //     var close_brace2 = specialization.indexOf(\")\", x);\r\n\r\n    //     var price = parseInt(\r\n    //       specialization.slice(close_brace + 2, close_brace + 3)\r\n    //     );\r\n\r\n    //     var available_quantity = parseInt(\r\n    //       specialization.slice(brace_index1 + 1, close_brace2)\r\n    //     );\r\n    //     var quantity_entered = parseInt(\r\n    //       prompt(\r\n    //         \"enter the quantity (Available quantity = \" +\r\n    //           available_quantity +\r\n    //           \")\"\r\n    //       )\r\n    //     );\r\n\r\n    //     if (quantity_entered <= available_quantity) {\r\n    //       var updated_specialization = specialization.replace(\r\n    //         \"\" + available_quantity,\r\n    //         \"\" + available_quantity - quantity_entered\r\n    //       );\r\n    //       alert(updated_specialization);\r\n    //       console.log(\"upadted record : \", record);\r\n    //       record[\"Specialisation\"] = updated_specialization;\r\n    //       console.log(\"upadted record : \", record);\r\n          record.status=\"Transported\";\r\n          let string = JSON.stringify(record);\r\n\r\n          let ipfs_modified = Buffer(string);\r\n          console.log(\"Submitting file to ipfs...\");\r\n\r\n          ipfs.add(ipfs_modified, (error, result) => {\r\n            console.log(\"Ipfs result\", result);\r\n            if (error) {\r\n              console.error(error);\r\n              return;\r\n            } else {\r\n              console.log(\"sending hash to contract\");\r\n              this.state.contract.methods\r\n                .set_signup(this.props.match.params.publickey, result[0].hash)\r\n                .send({ from: this.state.account }, (res) => {\r\n                  console.log(\"resultttt :\", res);\r\n\r\n                  var x = record.cropId.indexOf(\"-\");\r\n                  var dkey = record.cropId.slice(0, x);\r\n\r\n                  var y = record.retailerId.indexOf(\"-\");\r\n                  var tkey = record.retailerId.slice(0, y);\r\n\r\n                  console.log(\"Distributer key  : \", dkey, \"   Transporter key   :\", tkey);\r\n                  console.log(\r\n                    \"ethers\",\r\n                    ethers\r\n                  );\r\n\r\n                  console.log(\"accounts  :\", this.state.account);\r\n                  const web3 = window.web3;\r\n\r\n                  // web3.eth.sendTransaction({\r\n                  //   from: dkey,\r\n                  //   to: this.state.account,\r\n                  //   value: Utils.toWei(\"\" + ethers, \"ether\"),\r\n                  // });\r\n                });\r\n            }\r\n          });\r\n    //     } else {\r\n    //       alert(\"Please enter the value less than or equal to avilable value\");\r\n    //     }\r\n    //   }\r\n    // });\r\n        // console.log(`--SUBMITTING-- : `);\r\n        // console.log(this.state.account, this.state.security_deposit);\r\n        // this.state.contract.methods.setSecurityDeposit()\r\n        // .send({\r\n        //   from: this.state.account,\r\n        //   value: Utils.toWei(ethers, \"ether\"),\r\n        // },()=>{\r\n          \r\n        //   window.location.reload();\r\n        //   console.log(\"reolad\")\r\n        // })\r\n        //=======================================================\r\n\r\n        // var r = window.confirm(\r\n        //   \"Are you sure you want to add \" + userData.PublicKey + \" in the network\"\r\n        // );\r\n        // if (r === true) {\r\n        //   console.log(\"you pressed ok\");\r\n        //   userData.Verified = \"Verified\";\r\n        //   console.log(\"Signup info:  \", userData);\r\n        //   let signup_string = JSON.stringify(userData);\r\n    \r\n        //   let ipfs_sign_up = Buffer(signup_string);\r\n        //   console.log(\"Submitting file to ipfs...\");\r\n    \r\n        //   ipfs.add(ipfs_sign_up, (error, result) => {\r\n        //     console.log(\"Ipfs result\", result);\r\n        //     if (error) {\r\n        //       console.error(error);\r\n        //       return;\r\n        //     } else {\r\n        //       console.log(\"sending hash to contract\");\r\n        //       this.state.contract.methods\r\n        //         .set_signup(userData.PublicKey, result[0].hash)\r\n        //         .send({ from: this.state.account }, () => {\r\n        //           alert(userData.First_Name + \" \" +userData.Last_Name +\" is now a legit user\" );\r\n        //         });\r\n        //     }\r\n        //   });\r\n        // } else {\r\n        //   alert(\"User not verified ....! Try again\") \r\n        // }\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <>\r\n            <h1> Available Transports </h1>\r\n            <table className=\"styled-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Transporter Id</th>\r\n                  {/* <th>Retailer key</th>\r\n                  <th>Km</th>\r\n                  <th>Kg</th>\r\n                  \r\n                  <th>Totpayment</th> */}\r\n                  <th>status</th>\r\n                  <th>Transport</th>\r\n                </tr>\r\n              </thead>\r\n              {/* <tbody>{this.state.UnverifiedData.map(this.renderTableData)}</tbody> */}\r\n              <tbody>{this.state.UnverifiedData.map(this.renderTableData)}</tbody>\r\n            </table>\r\n          </>\r\n        );\r\n      }\r\n}\r\n\r\nexport default TransportRequest;","/home/nikhil/Desktop/scm_project/src/components/pages/Transporter/TransporterNavbar.js",[],{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","replacedBy":"290"},{"ruleId":"287","replacedBy":"291"},{"ruleId":"289","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":28,"column":58,"nodeType":"295","endLine":28,"endColumn":74},{"ruleId":"296","severity":1,"message":"297","line":4,"column":10,"nodeType":"298","messageId":"299","endLine":4,"endColumn":17},{"ruleId":"296","severity":1,"message":"300","line":9,"column":3,"nodeType":"298","messageId":"299","endLine":9,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":101,"column":69,"nodeType":"295","endLine":101,"endColumn":86},{"ruleId":"296","severity":1,"message":"297","line":4,"column":10,"nodeType":"298","messageId":"299","endLine":4,"endColumn":17},{"ruleId":"296","severity":1,"message":"300","line":9,"column":3,"nodeType":"298","messageId":"299","endLine":9,"endColumn":12},{"ruleId":"296","severity":1,"message":"297","line":4,"column":10,"nodeType":"298","messageId":"299","endLine":4,"endColumn":17},{"ruleId":"296","severity":1,"message":"300","line":9,"column":3,"nodeType":"298","messageId":"299","endLine":9,"endColumn":12},{"ruleId":"296","severity":1,"message":"303","line":1,"column":28,"nodeType":"298","messageId":"299","endLine":1,"endColumn":34},{"ruleId":"296","severity":1,"message":"304","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":14},{"ruleId":"296","severity":1,"message":"300","line":9,"column":3,"nodeType":"298","messageId":"299","endLine":9,"endColumn":12},{"ruleId":"296","severity":1,"message":"305","line":19,"column":7,"nodeType":"298","messageId":"299","endLine":19,"endColumn":21},{"ruleId":"296","severity":1,"message":"306","line":20,"column":7,"nodeType":"298","messageId":"299","endLine":20,"endColumn":16},{"ruleId":"301","severity":1,"message":"302","line":359,"column":40,"nodeType":"295","endLine":359,"endColumn":57},{"ruleId":"296","severity":1,"message":"303","line":1,"column":28,"nodeType":"298","messageId":"299","endLine":1,"endColumn":34},{"ruleId":"296","severity":1,"message":"304","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":14},{"ruleId":"296","severity":1,"message":"300","line":9,"column":3,"nodeType":"298","messageId":"299","endLine":9,"endColumn":12},{"ruleId":"296","severity":1,"message":"305","line":19,"column":7,"nodeType":"298","messageId":"299","endLine":19,"endColumn":21},{"ruleId":"296","severity":1,"message":"306","line":20,"column":7,"nodeType":"298","messageId":"299","endLine":20,"endColumn":16},{"ruleId":"301","severity":1,"message":"302","line":334,"column":40,"nodeType":"295","endLine":334,"endColumn":57},{"ruleId":"296","severity":1,"message":"300","line":13,"column":3,"nodeType":"298","messageId":"299","endLine":13,"endColumn":12},{"ruleId":"296","severity":1,"message":"305","line":20,"column":7,"nodeType":"298","messageId":"299","endLine":20,"endColumn":21},{"ruleId":"296","severity":1,"message":"306","line":21,"column":7,"nodeType":"298","messageId":"299","endLine":21,"endColumn":16},{"ruleId":"301","severity":1,"message":"302","line":381,"column":40,"nodeType":"295","endLine":381,"endColumn":57},{"ruleId":"296","severity":1,"message":"304","line":6,"column":10,"nodeType":"298","messageId":"299","endLine":6,"endColumn":14},{"ruleId":"296","severity":1,"message":"307","line":15,"column":7,"nodeType":"298","messageId":"299","endLine":15,"endColumn":16},{"ruleId":"308","severity":1,"message":"309","line":82,"column":42,"nodeType":"310","messageId":"311","endLine":82,"endColumn":44},{"ruleId":"312","severity":1,"message":"313","line":263,"column":23,"nodeType":"298","messageId":"314","endLine":263,"endColumn":24},{"ruleId":"296","severity":1,"message":"315","line":2,"column":8,"nodeType":"298","messageId":"299","endLine":2,"endColumn":22},{"ruleId":"308","severity":1,"message":"309","line":77,"column":42,"nodeType":"310","messageId":"311","endLine":77,"endColumn":44},{"ruleId":"296","severity":1,"message":"316","line":2,"column":8,"nodeType":"298","messageId":"299","endLine":2,"endColumn":25},{"ruleId":"296","severity":1,"message":"317","line":6,"column":13,"nodeType":"298","messageId":"299","endLine":6,"endColumn":18},{"ruleId":"308","severity":1,"message":"309","line":92,"column":38,"nodeType":"310","messageId":"311","endLine":92,"endColumn":40},{"ruleId":"296","severity":1,"message":"318","line":238,"column":25,"nodeType":"298","messageId":"299","endLine":238,"endColumn":29},"no-native-reassign",["319"],"no-negated-in-lhs",["320"],["319"],["320"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar","'formValid' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'useRef' is defined but never used.","'Link' is defined but never used.","'publickeyRegex' is assigned a value but never used.","'passRegex' is assigned a value but never used.","'formValid' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'r' is already defined.","redeclared","'InvestorNavbar' is defined but never used.","'TransporterNavbar' is defined but never used.","'Utils' is defined but never used.","'web3' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]