[{"/home/nikhil/Desktop/scm_project/src/index.js":"1","/home/nikhil/Desktop/scm_project/src/App.js":"2","/home/nikhil/Desktop/scm_project/src/components/Navbar.js":"3","/home/nikhil/Desktop/scm_project/src/components/Dropdown.js":"4","/home/nikhil/Desktop/scm_project/src/components/Button.js":"5","/home/nikhil/Desktop/scm_project/src/components/MenuItems.js":"6","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Investor.js":"7","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Farmer.js":"8","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Distributor.js":"9","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Retailer.js":"10","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Storage.js":"11","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Transporter.js":"12","/home/nikhil/Desktop/scm_project/src/components/pages/signup/AgroConsultant.js":"13","/home/nikhil/Desktop/scm_project/src/components/pages/ContactUs.js":"14","/home/nikhil/Desktop/scm_project/src/components/pages/Instructions.js":"15","/home/nikhil/Desktop/scm_project/src/components/pages/Home.js":"16","/home/nikhil/Desktop/scm_project/src/components/pages/Navbar_GM.js":"17","/home/nikhil/Desktop/scm_project/src/components/pages/login/login.js":"18","/home/nikhil/Desktop/scm_project/src/components/pages/main/main.js":"19","/home/nikhil/Desktop/scm_project/src/components/Firebase/index.js":"20","/home/nikhil/Desktop/scm_project/src/components/pages/main/MainNavbar.js":"21","/home/nikhil/Desktop/scm_project/src/components/pages/main/UnverifiedUsers.js":"22","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerHome.js":"23","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerNavbar.js":"24","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerProfile.js":"25","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/ProposeCrops.js":"26","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/CropsStatus.js":"27","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/ApproveCrops.js":"28","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/BookConsultant.js":"29","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantHome.js":"30","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantNavbar.js":"31","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AcceptOffer.js":"32","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/RateCrops.js":"33","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/RateFarmer.js":"34","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/SecurityDeposit.js":"35","/home/nikhil/Desktop/scm_project/src/components/pages/Web3/web3Component.js":"36","/home/nikhil/Desktop/scm_project/src/components/pages/signup/Supplier.js":"37","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierHome.js":"38","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierNavbar.js":"39","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/EditCommodities.js":"40","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/ManageCommodities.js":"41","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/BuySupplies.js":"42","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantProfile.js":"43","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierProfile.js":"44","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierEditProfile.js":"45","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerEditProfile.js":"46","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantEditProfile.js":"47","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/DistributorHome.js":"48","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/DistributorNavbar.js":"49","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/hireTransporter.js":"50","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/buyGoods.js":"51"},{"size":149,"mtime":1617371842058,"results":"52","hashOfConfig":"53"},{"size":5575,"mtime":1622707688458,"results":"54","hashOfConfig":"53"},{"size":2361,"mtime":1617977155615,"results":"55","hashOfConfig":"53"},{"size":791,"mtime":1617383010849,"results":"56","hashOfConfig":"53"},{"size":220,"mtime":1609145996123,"results":"57","hashOfConfig":"53"},{"size":714,"mtime":1618579395595,"results":"58","hashOfConfig":"53"},{"size":13100,"mtime":1617632124535,"results":"59","hashOfConfig":"53"},{"size":11380,"mtime":1617632054743,"results":"60","hashOfConfig":"53"},{"size":13152,"mtime":1617632170851,"results":"61","hashOfConfig":"53"},{"size":12307,"mtime":1617632184891,"results":"62","hashOfConfig":"53"},{"size":13106,"mtime":1617632204092,"results":"63","hashOfConfig":"53"},{"size":13782,"mtime":1617632245576,"results":"64","hashOfConfig":"53"},{"size":13155,"mtime":1617632176955,"results":"65","hashOfConfig":"53"},{"size":199,"mtime":1617382943717,"results":"66","hashOfConfig":"53"},{"size":218,"mtime":1617382952196,"results":"67","hashOfConfig":"53"},{"size":753,"mtime":1617458519897,"results":"68","hashOfConfig":"53"},{"size":1500,"mtime":1617382955736,"results":"69","hashOfConfig":"53"},{"size":8757,"mtime":1622286777815,"results":"70","hashOfConfig":"53"},{"size":264,"mtime":1617382877316,"results":"71","hashOfConfig":"53"},{"size":608,"mtime":1615792482175,"results":"72","hashOfConfig":"53"},{"size":1092,"mtime":1619015054717,"results":"73","hashOfConfig":"53"},{"size":4769,"mtime":1617633041685,"results":"74","hashOfConfig":"53"},{"size":5516,"mtime":1622285652998,"results":"75","hashOfConfig":"53"},{"size":1553,"mtime":1622285536697,"results":"76","hashOfConfig":"53"},{"size":3231,"mtime":1622285860229,"results":"77","hashOfConfig":"53"},{"size":14549,"mtime":1617634483548,"results":"78","hashOfConfig":"53"},{"size":5313,"mtime":1622727113240,"results":"79","hashOfConfig":"53"},{"size":4676,"mtime":1617634969410,"results":"80","hashOfConfig":"53"},{"size":5103,"mtime":1618584533843,"results":"81","hashOfConfig":"53"},{"size":1734,"mtime":1617640550471,"results":"82","hashOfConfig":"53"},{"size":1801,"mtime":1622286376037,"results":"83","hashOfConfig":"53"},{"size":4422,"mtime":1622723074991,"results":"84","hashOfConfig":"53"},{"size":16882,"mtime":1622695153663,"results":"85","hashOfConfig":"53"},{"size":13187,"mtime":1617639903809,"results":"86","hashOfConfig":"53"},{"size":4253,"mtime":1617633598922,"results":"87","hashOfConfig":"53"},{"size":4503,"mtime":1622712718654,"results":"88","hashOfConfig":"53"},{"size":11883,"mtime":1622284850340,"results":"89","hashOfConfig":"53"},{"size":1691,"mtime":1618581370523,"results":"90","hashOfConfig":"53"},{"size":1573,"mtime":1622286423873,"results":"91","hashOfConfig":"53"},{"size":10428,"mtime":1622282689884,"results":"92","hashOfConfig":"53"},{"size":212,"mtime":1618581590268,"results":"93","hashOfConfig":"53"},{"size":7253,"mtime":1622728720279,"results":"94","hashOfConfig":"53"},{"size":3238,"mtime":1622285088239,"results":"95","hashOfConfig":"53"},{"size":2959,"mtime":1622293036190,"results":"96","hashOfConfig":"53"},{"size":11872,"mtime":1622285091035,"results":"97","hashOfConfig":"53"},{"size":10863,"mtime":1622285089183,"results":"98","hashOfConfig":"53"},{"size":12697,"mtime":1622285087355,"results":"99","hashOfConfig":"53"},{"size":1893,"mtime":1622286583928,"results":"100","hashOfConfig":"53"},{"size":1545,"mtime":1622707408024,"results":"101","hashOfConfig":"53"},{"size":5808,"mtime":1622712938008,"results":"102","hashOfConfig":"53"},{"size":5308,"mtime":1622729890349,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1x49jox",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nikhil/Desktop/scm_project/src/index.js",[],["215","216"],"/home/nikhil/Desktop/scm_project/src/App.js",[],"/home/nikhil/Desktop/scm_project/src/components/Navbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/Dropdown.js",[],"/home/nikhil/Desktop/scm_project/src/components/Button.js",[],["217","218"],"/home/nikhil/Desktop/scm_project/src/components/MenuItems.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Investor.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Farmer.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Distributor.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Retailer.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Storage.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Transporter.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/AgroConsultant.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/ContactUs.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Instructions.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Home.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Navbar_GM.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/login/login.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/main/main.js",[],"/home/nikhil/Desktop/scm_project/src/components/Firebase/index.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/main/MainNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/main/UnverifiedUsers.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerHome.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerProfile.js",["219","220","221"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\n\r\nclass FarmerProfile extends Component {\r\n    async componentWillMount() {\r\n      let account_contract;\r\n      (async function () {\r\n        await loadWeb3();\r\n        \r\n      })().then(() =>{\r\n      \r\n      });\r\n      (async function () {\r\n        account_contract = await loadBlockchainData(\"UserData\");\r\n      })().then(() => {\r\n        \r\n        console.log(\"account :\",account_contract[0]);\r\n        console.log(\"contract :\",account_contract[1]);\r\n        this.setState({ account: account_contract[0] });\r\n        this.setState({ contract: account_contract[1] });\r\n        this.fetchUserDetails();\r\n      });\r\n    }\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        userName: \"\",\r\n        publickey: \"\",\r\n        address : \"\",\r\n        contactno :\"\",\r\n        email : \"\",\r\n        document : \"\",\r\n      };\r\n      \r\n    }\r\n    fetchUserDetails() {\r\n      console.log(this.props.match.params.publicKey);\r\n      this.state.contract.methods\r\n        .get_signup(this.props.match.params.publickey)\r\n        .call({ from: this.state.account })\r\n        .then((ipfs_hash) => {\r\n          console.log(\"hash from solidity\", ipfs_hash);\r\n          ipfs.cat(ipfs_hash, (error, result) => {\r\n            if (result === undefined) {\r\n              alert(\"There is an issue with your credentials\");\r\n              return;\r\n            }\r\n            let userData = JSON.parse(result.toString());\r\n            console.log(\"ipfs result\", userData);\r\n            this.setState({\r\n              userName: userData.First_Name + \" \" + userData.Last_Name,\r\n              publickey: userData.PublicKey,\r\n              address : userData.Address,\r\n              contactno : userData.ContactNo,\r\n              email : userData.Email,\r\n              document : userData.Document,\r\n\r\n            });\r\n          });\r\n        });\r\n    }\r\n  \r\n   \r\n  \r\n    render() {\r\n      \r\n  \r\n      return (\r\n        <div class=\"wrapper_pro\">\r\n          <div className=\"form-wrapper_pro_head\">\r\n          <h1> Farmer Profile Page </h1>\r\n          </div>\r\n        <div className=\"form-wrapper_pro\">\r\n          \r\n          <div>\r\n            <h1>Farmer Name : {this.state.userName}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Pulic Key: {this.state.publickey}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Address : {this.state.address}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Contact Number : {this.state.contactno}</h1>\r\n          </div>\r\n          <div>\r\n           <h1>Uploaded Documents : <a href = {this.state.document} target = \"_blank\">Click here</a></h1>\r\n          </div>\r\n          <div>\r\n            <h1>Email Id : {this.state.email}</h1>\r\n          </div>\r\n          <div>\r\n         <Link to={\"/FarmerEditProfile/\"+this.state.publickey}> <button class=\"edit_button_pro\">Edit Profile</button></Link>\r\n          </div>\r\n          \r\n         </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default FarmerProfile;\r\n  ","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/ProposeCrops.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/CropsStatus.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/ApproveCrops.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/BookConsultant.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantHome.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AcceptOffer.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/RateCrops.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/RateFarmer.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/SecurityDeposit.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Web3/web3Component.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/signup/Supplier.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierHome.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/EditCommodities.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/ManageCommodities.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/BuySupplies.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantProfile.js",["222","223"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\n\r\nclass AgroConsultantProfile extends Component {\r\n    async componentWillMount() {\r\n      let account_contract;\r\n      (async function () {\r\n        await loadWeb3();\r\n        \r\n      })().then(() =>{\r\n      \r\n      });\r\n      (async function () {\r\n        account_contract = await loadBlockchainData(\"UserData\");\r\n      })().then(() => {\r\n        \r\n        console.log(\"account :\",account_contract[0]);\r\n        console.log(\"contract :\",account_contract[1]);\r\n        this.setState({ account: account_contract[0] });\r\n        this.setState({ contract: account_contract[1] });\r\n        this.fetchUserDetails();\r\n      });\r\n    }\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        userName: \"\",\r\n        address : \"\",\r\n        contactno :\"\",\r\n        email : \"\",\r\n        collegename:\"\",\r\n        qualification :\"\",\r\n        publickey : \"\",\r\n      };\r\n      \r\n    }\r\n    fetchUserDetails() {\r\n      this.state.contract.methods\r\n        .get_signup(this.props.match.params.publickey)\r\n        .call({ from: this.state.account })\r\n        .then((ipfs_hash) => {\r\n          console.log(\"hash from solidity\", ipfs_hash);\r\n          ipfs.cat(ipfs_hash, (error, result) => {\r\n            if (result === undefined) {\r\n              alert(\"There is an issue with your credentials\");\r\n              return;\r\n            }\r\n            let userData = JSON.parse(result.toString());\r\n            console.log(\"ipfs result\", userData);\r\n            this.setState({\r\n              userName: userData.First_Name + \" \" + userData.Last_Name,\r\n              address : userData.Address,\r\n              contactno : userData.ContactNo,\r\n              email : userData.Email,\r\n              collegename : userData.CollegeName,\r\n              qualification : userData.Qualification,\r\n              publickey : userData.PublicKey,\r\n\r\n            });\r\n          });\r\n        });\r\n    }\r\n  \r\n   \r\n  \r\n    render() {\r\n      \r\n  \r\n      return (\r\n        <div class=\"wrapper_pro\">\r\n          <div className=\"form-wrapper_pro_head\">\r\n          <h1> Agro Consultant Profile Page </h1>\r\n          </div>\r\n        <div className=\"form-wrapper_pro\">\r\n            <h1>Agro Consultant Name : {this.state.userName}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Address : {this.state.address}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Contact Number : {this.state.contactno}</h1>\r\n          </div>\r\n          <div>\r\n            <h1> College Name : {this.state.collegename}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Qualification {this.state.qualification}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Email Id : {this.state.email}</h1>\r\n          </div>\r\n          <div>\r\n         <Link to={\"/AgroConsultantEditProfile/\"+this.state.publickey}> <button class=\"edit_button_pro\">Edit Profile</button></Link>\r\n          </div>\r\n          \r\n         \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default AgroConsultantProfile;\r\n  ","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierProfile.js",["224","225"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\n\r\nclass AgroConsultantProfile extends Component {\r\n  async componentWillMount() {\r\n    let account_contract;\r\n    (async function () {\r\n      await loadWeb3();\r\n    })().then(() => {});\r\n    (async function () {\r\n      account_contract = await loadBlockchainData(\"UserData\");\r\n    })().then(() => {\r\n      console.log(\"account :\", account_contract[0]);\r\n      console.log(\"contract :\", account_contract[1]);\r\n      this.setState({ account: account_contract[0] });\r\n      this.setState({ contract: account_contract[1] });\r\n      this.fetchUserDetails();\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userName: \"\",\r\n      address: \"\",\r\n      contactno: \"\",\r\n      publickey: \"\",\r\n      email: \"\",\r\n      specialisation: \"\",\r\n    };\r\n  }\r\n  fetchUserDetails() {\r\n    this.state.contract.methods\r\n      .get_signup(this.props.match.params.publickey)\r\n      .call({ from: this.state.account })\r\n      .then((ipfs_hash) => {\r\n        console.log(\"hash from solidity\", ipfs_hash);\r\n        ipfs.cat(ipfs_hash, (error, result) => {\r\n          if (result === undefined) {\r\n            alert(\"There is an issue with your credentials\");\r\n            return;\r\n          }\r\n          let userData = JSON.parse(result.toString());\r\n          console.log(\"ipfs result\", userData);\r\n          this.setState({\r\n            userName: userData.First_Name + \" \" + userData.Last_Name,\r\n            address: userData.Address,\r\n            contactno: userData.ContactNo,\r\n            email: userData.Email,\r\n            specialisation: userData.Specialisation,\r\n            publickey: userData.PublicKey,\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"wrapper_pro\">\r\n        <div className=\"form-wrapper_pro_head\">\r\n          <h1> Supplier Profile Page </h1>\r\n        </div>\r\n        <div className=\"form-wrapper_pro\">\r\n          <h1>Supplier Profile Page </h1>\r\n          <div>\r\n            <h1>Supplier Name : {this.state.userName}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Address : {this.state.address}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Contact Number : {this.state.contactno}</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Specialisation : {this.state.specialisation}</h1>\r\n          </div>\r\n\r\n          <div>\r\n            <h1>Email Id : {this.state.email}</h1>\r\n          </div>\r\n          <div>\r\n            <Link to={\"/SupplierEditProfile/\" + this.state.publickey}>\r\n              {\" \"}\r\n              <button class=\"edit_button_pro\">Edit Profile</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgroConsultantProfile;\r\n","/home/nikhil/Desktop/scm_project/src/components/pages/Supplier/SupplierEditProfile.js",["226","227","228","229","230","231"],"import React, { Component, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\n\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\nconst contactRegex = RegExp(/^\\d{10}$/);\r\nconst publickeyRegex = RegExp(/^[0-9A-Za-z]{42}-[a-zA-Z0-9]+$/);\r\nconst passRegex = RegExp(\r\n  // eslint-disable-next-line no-useless-escape\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\r\n);\r\n\r\nclass SupplierEditProfile extends Component {\r\n  async componentWillMount() {\r\n    let account_contract;\r\n    (async function () {\r\n      await loadWeb3();\r\n      \r\n    })().then(() =>{\r\n    \r\n    });\r\n    (async function () {\r\n      account_contract = await loadBlockchainData(\"UserData\");\r\n    })().then(() => {\r\n      \r\n      console.log(\"account :\",account_contract[0]);\r\n      console.log(\"contract :\",account_contract[1]);\r\n      this.setState({ account: account_contract[0] });\r\n      this.setState({ contract: account_contract[1] });\r\n      this.fetchUserDetails();\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      password: null,\r\n      contactno: null,\r\n      publickey: \"\",\r\n      address: null,\r\n      specialisation: null,\r\n      role: \"Farmer\",\r\n      verified: \"not verified\",\r\n      image: null,\r\n      progress: 0,\r\n      url: \"\",\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        specialisation :\"\",\r\n        password: \"\",\r\n        contactno: \"\",\r\n        publickey: \"\",\r\n        address: \"\",\r\n      },\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setProgress = this.setProgress.bind(this);\r\n    this.setUrl = this.setUrl.bind(this);\r\n    this.captureFile = this.captureFile.bind(this);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(`--SUBMITTING-- : `);\r\n      \r\n            let signup_info = {\r\n              First_Name: this.state.firstName,\r\n              Last_Name: this.state.lastName,\r\n              Address: this.state.address,\r\n              Email: this.state.email,\r\n              ContactNo: this.state.contactno,\r\n              Document: this.state.url,\r\n              Specialisation: this.state.specialisation,\r\n              Password: this.state.password,\r\n              PublicKey: this.state.publickey,\r\n              Role: this.state.role,\r\n              Verified: this.state.verified,\r\n              \r\n            };\r\n            console.log(\"Signup info:  \", signup_info);\r\n            let signup_string = JSON.stringify(signup_info);\r\n\r\n            let ipfs_sign_up = Buffer(signup_string);\r\n            console.log(\"Submitting file to ipfs...\");\r\n\r\n           ipfs.add(ipfs_sign_up, (error, result) => {\r\n              console.log(\"Ipfs result\", result);\r\n              if (error) {\r\n                console.error(error);\r\n                return;\r\n              } else {\r\n                console.log(\"sending hash to contract\");\r\n                this.state.contract.methods\r\n                  .set_signup(this.state.publickey, result[0].hash)\r\n                  .send({ from: this.state.account }, (res) => {\r\n                    console.log(\"res :\",res);\r\n                    if (res === false) {\r\n                      alert(\"Your Profile is Updated\");\r\n                    }\r\n                  });\r\n              }\r\n            });\r\n         \r\n      \r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName =\r\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"lastName\":\r\n        formErrors.lastName =\r\n          value.length < 1 ? \"minimum 1 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"address\":\r\n        formErrors.address =\r\n          value.length < 1 ? \"Please enter your address\" : \"\";\r\n        break;\r\n\r\n        case \"specialisation\":\r\n        formErrors.specialisation =\r\n          value.length < 1 ? \"Please enter your specialisation\" : \"\";\r\n        break;\r\n\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid email address\";\r\n        break;\r\n\r\n      case \"contactno\":\r\n        formErrors.contactno = contactRegex.test(value)\r\n          ? \"\"\r\n          : \"Exactly 10 numbers are required\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  setProgress = (prog) => {\r\n    this.setState({\r\n      progress: prog,\r\n    });\r\n  };\r\n\r\n  setUrl = (link) => {\r\n    this.setState({\r\n      url: link,\r\n    });\r\n  };\r\n\r\n  captureFile = (event) => {\r\n    event.preventDefault();\r\n\r\n    const file = event.target.files[0];\r\n    console.log(\"image\", file);\r\n    this.setState(\r\n      function (prevState, props) {\r\n        return {\r\n          image: file,\r\n        };\r\n      },\r\n      () => {\r\n        console.log(\"image\", this.state.image);\r\n        const uploadTask = storage\r\n          .ref(`${this.state.role}/${this.state.image.name}`)\r\n          .put(this.state.image);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setProgress(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(`${this.state.role}`)\r\n              .child(this.state.image.name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                this.setUrl(url);\r\n              });\r\n            alert(\"Upload Complete\");\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  fetchUserDetails() {\r\n    this.state.contract.methods\r\n      .get_signup(this.props.match.params.publickey)\r\n      .call({ from: this.state.account })\r\n      .then((ipfs_hash) => {\r\n        console.log(\"hash from solidity\", ipfs_hash);\r\n        ipfs.cat(ipfs_hash, (error, result) => {\r\n          if (result === undefined) {\r\n            alert(\"There is an issue with your credentials\");\r\n            return;\r\n          }\r\n          let userData = JSON.parse(result.toString());\r\n          console.log(\"fetched user details :\", userData);\r\n          this.setState({\r\n            firstName : userData.First_Name,\r\n            lastName : userData.Last_Name,\r\n            publickey: userData.PublicKey,\r\n            address : userData.Address,\r\n            contactno : userData.ContactNo,\r\n            email : userData.Email,\r\n            url : userData.Document,\r\n            role : userData.Role,\r\n            password : userData.Password,\r\n            verified : userData.Verified,\r\n            specialisation : userData.Specialisation,\r\n\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"form-wrapper\">\r\n          <h1>Edit Profile - Farmer </h1>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            <div className=\"firstName\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input\r\n                className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.firstName}\r\n                name=\"firstName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.firstName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"lastName\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input\r\n                className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.lastName}\r\n                name=\"lastName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.lastName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"email\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                className={formErrors.email.length > 0 ? \"error\" : null}\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                name=\"email\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.email.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.email}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"contact_no\">\r\n              <label htmlFor=\"email\">Contact Number</label>\r\n              <input\r\n                className={formErrors.contactno.length > 0 ? \"error\" : null}\r\n                type=\"contactno\"\r\n                value={this.state.contactno}\r\n                name=\"contactno\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.contactno.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.contactno}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"specialisation\">\r\n              <label htmlFor=\"email\">Specialisation</label>\r\n              <input\r\n                className={\r\n                  formErrors.specialisation.length > 0 ? \"error\" : null\r\n                }\r\n                value = {this.state.specialisation}\r\n                type=\"text\"\r\n                name=\"specialisation\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.specialisation.length > 0 && (\r\n                <span className=\"errorMessage\">\r\n                  {formErrors.specialisation}\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"address\">\r\n              <label htmlFor=\"email\">Address</label>\r\n              <input\r\n                className={formErrors.address.length > 0 ? \"error\" : null}\r\n                value={this.state.address}\r\n                type=\"text\"\r\n                name=\"address\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.address.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.address}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Uploaded Documents</label>\r\n              \r\n            <a href = {this.state.url} target = \"_blank\">Click here to view Uploaded Documents</a>\r\n        \r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Upload Documents  ** If you want to update the documents **</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"application/pdf\"\r\n                onChange={this.captureFile}\r\n              />\r\n              {<progress value={this.state.progress} max=\"100\" />}\r\n            </div>\r\n\r\n            <div className=\"createAccount\">\r\n              <button type=\"submit\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SupplierEditProfile;\r\n","/home/nikhil/Desktop/scm_project/src/components/pages/Farmer/FarmerEditProfile.js",["232","233","234","235","236","237"],"import React, { Component, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\n\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\nconst contactRegex = RegExp(/^\\d{10}$/);\r\nconst publickeyRegex = RegExp(/^[0-9A-Za-z]{42}-[a-zA-Z0-9]+$/);\r\nconst passRegex = RegExp(\r\n  // eslint-disable-next-line no-useless-escape\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\r\n);\r\n\r\nclass FarmerEditProfile extends Component {\r\n  async componentWillMount() {\r\n    let account_contract;\r\n    (async function () {\r\n      await loadWeb3();\r\n      \r\n    })().then(() =>{\r\n    \r\n    });\r\n    (async function () {\r\n      account_contract = await loadBlockchainData(\"UserData\");\r\n    })().then(() => {\r\n      \r\n      console.log(\"account :\",account_contract[0]);\r\n      console.log(\"contract :\",account_contract[1]);\r\n      this.setState({ account: account_contract[0] });\r\n      this.setState({ contract: account_contract[1] });\r\n      this.fetchUserDetails();\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      password: null,\r\n      contactno: null,\r\n      publickey: \"\",\r\n      address: null,\r\n      role: \"Farmer\",\r\n      verified: \"not verified\",\r\n      image: null,\r\n      progress: 0,\r\n      url: \"\",\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        contactno: \"\",\r\n        publickey: \"\",\r\n        address: \"\",\r\n      },\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setProgress = this.setProgress.bind(this);\r\n    this.setUrl = this.setUrl.bind(this);\r\n    this.captureFile = this.captureFile.bind(this);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(`--SUBMITTING-- : `);\r\n      \r\n            let signup_info = {\r\n              First_Name: this.state.firstName,\r\n              Last_Name: this.state.lastName,\r\n              Address: this.state.address,\r\n              Email: this.state.email,\r\n              ContactNo: this.state.contactno,\r\n\r\n              Document: this.state.url,\r\n\r\n              Password: this.state.password,\r\n              PublicKey: this.state.publickey,\r\n              Role: this.state.role,\r\n              Verified: this.state.verified,\r\n              \r\n            };\r\n            console.log(\"Signup info:  \", signup_info);\r\n            let signup_string = JSON.stringify(signup_info);\r\n\r\n            let ipfs_sign_up = Buffer(signup_string);\r\n            console.log(\"Submitting file to ipfs...\");\r\n\r\n           ipfs.add(ipfs_sign_up, (error, result) => {\r\n              console.log(\"Ipfs result\", result);\r\n              if (error) {\r\n                console.error(error);\r\n                return;\r\n              } else {\r\n                console.log(\"sending hash to contract\");\r\n                this.state.contract.methods\r\n                  .set_signup(this.state.publickey, result[0].hash)\r\n                  .send({ from: this.state.account }, (res) => {\r\n                    console.log(\"res :\",res);\r\n                    if (res === false) {\r\n                      alert(\"Your Profile is Updated\");\r\n                    }\r\n                  });\r\n              }\r\n            });\r\n         \r\n      \r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName =\r\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"lastName\":\r\n        formErrors.lastName =\r\n          value.length < 1 ? \"minimum 1 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"address\":\r\n        formErrors.address =\r\n          value.length < 1 ? \"Please enter your address\" : \"\";\r\n        break;\r\n\r\n\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid email address\";\r\n        break;\r\n\r\n      case \"contactno\":\r\n        formErrors.contactno = contactRegex.test(value)\r\n          ? \"\"\r\n          : \"Exactly 10 numbers are required\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  setProgress = (prog) => {\r\n    this.setState({\r\n      progress: prog,\r\n    });\r\n  };\r\n\r\n  setUrl = (link) => {\r\n    this.setState({\r\n      url: link,\r\n    });\r\n  };\r\n\r\n  captureFile = (event) => {\r\n    event.preventDefault();\r\n\r\n    const file = event.target.files[0];\r\n    console.log(\"image\", file);\r\n    this.setState(\r\n      function (prevState, props) {\r\n        return {\r\n          image: file,\r\n        };\r\n      },\r\n      () => {\r\n        console.log(\"image\", this.state.image);\r\n        const uploadTask = storage\r\n          .ref(`${this.state.role}/${this.state.image.name}`)\r\n          .put(this.state.image);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setProgress(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(`${this.state.role}`)\r\n              .child(this.state.image.name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                this.setUrl(url);\r\n              });\r\n            alert(\"Upload Complete\");\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  fetchUserDetails() {\r\n    this.state.contract.methods\r\n      .get_signup(this.props.match.params.publickey)\r\n      .call({ from: this.state.account })\r\n      .then((ipfs_hash) => {\r\n        console.log(\"hash from solidity\", ipfs_hash);\r\n        ipfs.cat(ipfs_hash, (error, result) => {\r\n          if (result === undefined) {\r\n            alert(\"There is an issue with your credentials\");\r\n            return;\r\n          }\r\n          let userData = JSON.parse(result.toString());\r\n          console.log(\"fetched user details :\", userData);\r\n          this.setState({\r\n            firstName : userData.First_Name,\r\n            lastName : userData.Last_Name,\r\n            publickey: userData.PublicKey,\r\n            address : userData.Address,\r\n            contactno : userData.ContactNo,\r\n            email : userData.Email,\r\n            url : userData.Document,\r\n            role : userData.Role,\r\n            password : userData.Password,\r\n            verified : userData.Verified,\r\n\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"form-wrapper\">\r\n          <h1>Edit Profile - Farmer </h1>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            <div className=\"firstName\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input\r\n                className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.firstName}\r\n                name=\"firstName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.firstName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"lastName\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input\r\n                className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.lastName}\r\n                name=\"lastName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.lastName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"email\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                className={formErrors.email.length > 0 ? \"error\" : null}\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                name=\"email\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.email.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.email}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"contact_no\">\r\n              <label htmlFor=\"email\">Contact Number</label>\r\n              <input\r\n                className={formErrors.contactno.length > 0 ? \"error\" : null}\r\n                type=\"contactno\"\r\n                value={this.state.contactno}\r\n                name=\"contactno\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.contactno.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.contactno}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"address\">\r\n              <label htmlFor=\"email\">Address</label>\r\n              <input\r\n                className={formErrors.address.length > 0 ? \"error\" : null}\r\n                value={this.state.address}\r\n                type=\"text\"\r\n                name=\"address\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.address.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.address}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Uploaded Documents</label>\r\n              \r\n            <a href = {this.state.url} target = \"_blank\">Click here to view Uploaded Documents</a>\r\n        \r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Upload Documents  ** If you want to update the documents **</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"application/pdf\"\r\n                onChange={this.captureFile}\r\n              />\r\n              {<progress value={this.state.progress} max=\"100\" />}\r\n            </div>\r\n\r\n            <div className=\"createAccount\">\r\n              <button type=\"submit\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FarmerEditProfile;\r\n","/home/nikhil/Desktop/scm_project/src/components/pages/AgroConsultant/AgroConsultantEditProfile.js",["238","239","240","241","242","243"],"import React, { Component, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"./style.css\";\r\nimport { storage } from \"../../Firebase\";\r\nimport {\r\n  ipfs,\r\n  loadWeb3,\r\n  loadBlockchainData,\r\n  formValid,\r\n} from \"../Web3/web3Component\";\r\n\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\nconst contactRegex = RegExp(/^\\d{10}$/);\r\nconst publickeyRegex = RegExp(/^[0-9A-Za-z]{42}-[a-zA-Z0-9]+$/);\r\nconst passRegex = RegExp(\r\n  // eslint-disable-next-line no-useless-escape\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\r\n);\r\n\r\nclass AgroConsultantEditProfile extends Component {\r\n  async componentWillMount() {\r\n    let account_contract;\r\n    (async function () {\r\n      await loadWeb3();\r\n      \r\n    })().then(() =>{\r\n    \r\n    });\r\n    (async function () {\r\n      account_contract = await loadBlockchainData(\"UserData\");\r\n    })().then(() => {\r\n      \r\n      console.log(\"account :\",account_contract[0]);\r\n      console.log(\"contract :\",account_contract[1]);\r\n      this.setState({ account: account_contract[0] });\r\n      this.setState({ contract: account_contract[1] });\r\n      this.fetchUserDetails();\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      password: null,\r\n      contactno: null,\r\n      collegename:null,\r\n      qualification:null,\r\n      publickey: \"\",\r\n      address: null,\r\n      role: \"Farmer\",\r\n      verified: \"not verified\",\r\n      image: null,\r\n      progress: 0,\r\n      url: \"\",\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        contactno: \"\",\r\n        publickey: \"\",\r\n        qualification :\"\",\r\n        collegename : \"\",\r\n        address: \"\",\r\n      },\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setProgress = this.setProgress.bind(this);\r\n    this.setUrl = this.setUrl.bind(this);\r\n    this.captureFile = this.captureFile.bind(this);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(`--SUBMITTING-- : `);\r\n      \r\n            let signup_info = {\r\n              First_Name: this.state.firstName,\r\n              Last_Name: this.state.lastName,\r\n              Address: this.state.address,\r\n              Email: this.state.email,\r\n              ContactNo: this.state.contactno,\r\n              Document: this.state.url,\r\n              Password: this.state.password,\r\n              PublicKey: this.state.publickey,\r\n              Role: this.state.role,\r\n              Verified: this.state.verified,\r\n              Qualification: this.state.qualification,\r\n              CollegeName: this.state.collegename,\r\n              \r\n            };\r\n            console.log(\"Signup info:  \", signup_info);\r\n            let signup_string = JSON.stringify(signup_info);\r\n\r\n            let ipfs_sign_up = Buffer(signup_string);\r\n            console.log(\"Submitting file to ipfs...\");\r\n\r\n           ipfs.add(ipfs_sign_up, (error, result) => {\r\n              console.log(\"Ipfs result\", result);\r\n              if (error) {\r\n                console.error(error);\r\n                return;\r\n              } else {\r\n                console.log(\"sending hash to contract\");\r\n                this.state.contract.methods\r\n                  .set_signup(this.state.publickey, result[0].hash)\r\n                  .send({ from: this.state.account }, (res) => {\r\n                    console.log(\"res :\",res);\r\n                    if (res === false) {\r\n                      alert(\"Your Profile is Updated\");\r\n                    }\r\n                  });\r\n              }\r\n            });\r\n         \r\n      \r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName =\r\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"lastName\":\r\n        formErrors.lastName =\r\n          value.length < 1 ? \"minimum 1 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"address\":\r\n        formErrors.address =\r\n          value.length < 1 ? \"Please enter your address\" : \"\";\r\n        break;\r\n\r\n\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid email address\";\r\n        break;\r\n\r\n        case \"qualification\":\r\n        formErrors.qualification =\r\n          value.length < 1 ? \"Please enter your qualification\" : \"\";\r\n        break;\r\n\r\n      case \"collegename\":\r\n        formErrors.collegename =\r\n          value.length < 1 ? \"Please enter your collegename\" : \"\";\r\n        break;\r\n\r\n      case \"contactno\":\r\n        formErrors.contactno = contactRegex.test(value)\r\n          ? \"\"\r\n          : \"Exactly 10 numbers are required\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  setProgress = (prog) => {\r\n    this.setState({\r\n      progress: prog,\r\n    });\r\n  };\r\n\r\n  setUrl = (link) => {\r\n    this.setState({\r\n      url: link,\r\n    });\r\n  };\r\n\r\n  captureFile = (event) => {\r\n    event.preventDefault();\r\n\r\n    const file = event.target.files[0];\r\n    console.log(\"image\", file);\r\n    this.setState(\r\n      function (prevState, props) {\r\n        return {\r\n          image: file,\r\n        };\r\n      },\r\n      () => {\r\n        console.log(\"image\", this.state.image);\r\n        const uploadTask = storage\r\n          .ref(`${this.state.role}/${this.state.image.name}`)\r\n          .put(this.state.image);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setProgress(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(`${this.state.role}`)\r\n              .child(this.state.image.name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                this.setUrl(url);\r\n              });\r\n            alert(\"Upload Complete\");\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  fetchUserDetails() {\r\n    this.state.contract.methods\r\n      .get_signup(this.props.match.params.publickey)\r\n      .call({ from: this.state.account })\r\n      .then((ipfs_hash) => {\r\n        console.log(\"hash from solidity\", ipfs_hash);\r\n        ipfs.cat(ipfs_hash, (error, result) => {\r\n          if (result === undefined) {\r\n            alert(\"There is an issue with your credentials\");\r\n            return;\r\n          }\r\n          let userData = JSON.parse(result.toString());\r\n          console.log(\"fetched user details :\", userData);\r\n          this.setState({\r\n            firstName : userData.First_Name,\r\n            lastName : userData.Last_Name,\r\n            publickey: userData.PublicKey,\r\n            address : userData.Address,\r\n            contactno : userData.ContactNo,\r\n            email : userData.Email,\r\n            url : userData.Document,\r\n            role : userData.Role,\r\n            password : userData.Password,\r\n            verified : userData.Verified,\r\n            collegename : userData.CollegeName,\r\n            qualification : userData.Qualification,\r\n\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"form-wrapper\">\r\n          <h1> Edit Profile - Agro Consultant </h1>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            <div className=\"firstName\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input\r\n                className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.firstName}\r\n                name=\"firstName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.firstName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"lastName\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input\r\n                className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                value={this.state.lastName}\r\n                name=\"lastName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.lastName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"email\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                className={formErrors.email.length > 0 ? \"error\" : null}\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                name=\"email\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.email.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.email}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"contact_no\">\r\n              <label htmlFor=\"email\">Contact Number</label>\r\n              <input\r\n                className={formErrors.contactno.length > 0 ? \"error\" : null}\r\n                type=\"contactno\"\r\n                value={this.state.contactno}\r\n                name=\"contactno\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.contactno.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.contactno}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"qualification\">\r\n              <label htmlFor=\"email\">Highest qualification</label>\r\n              <input\r\n                className={formErrors.qualification.length > 0 ? \"error\" : null}\r\n                value = {this.state.qualification}\r\n                type=\"text\"\r\n                name=\"qualification\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.qualification.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.qualification}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"collegename\">\r\n              <label htmlFor=\"email\">College Name</label>\r\n              <input\r\n                className={formErrors.collegename.length > 0 ? \"error\" : null}\r\n                value = {this.state.collegename}\r\n                type=\"text\"\r\n                name=\"collegename\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.collegename.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.collegename}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"address\">\r\n              <label htmlFor=\"email\">Address</label>\r\n              <input\r\n                className={formErrors.address.length > 0 ? \"error\" : null}\r\n                value={this.state.address}\r\n                type=\"text\"\r\n                name=\"address\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.address.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.address}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Uploaded Documents</label>\r\n              \r\n            <a href = {this.state.url} target = \"_blank\">Click here to view Uploaded Documents</a>\r\n        \r\n            </div>\r\n\r\n            <div className=\"upload_doc\">\r\n              <label htmlFor=\"email\">Upload Documents  ** If you want to update the documents **</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"application/pdf\"\r\n                onChange={this.captureFile}\r\n              />\r\n              {<progress value={this.state.progress} max=\"100\" />}\r\n            </div>\r\n\r\n            <div className=\"createAccount\">\r\n              <button type=\"submit\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgroConsultantEditProfile;\r\n","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/DistributorHome.js",["244"],"import React, { Component } from \"react\";\r\nimport DistributorNavbar from \"./DistributorNavbar\";\r\nimport \"./Distributor.css\";\r\nimport { ipfs, loadWeb3, loadBlockchainData } from \"../Web3/web3Component\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class DistributorHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userData: [],\r\n      userName: \"\",\r\n      publickey: \"\",\r\n    };\r\n  }\r\n\r\n  async componentWillMount() {\r\n    let account_contract;\r\n    (async function () {\r\n      await loadWeb3();\r\n    })();\r\n    (async function () {\r\n      account_contract = await loadBlockchainData(\"UserData\");\r\n    })().then(() => {\r\n      console.log(account_contract);\r\n      this.setState({ account: account_contract[0] });\r\n      this.setState({ contract: account_contract[1] });\r\n      this.fetchUsername()\r\n    });\r\n  }\r\n\r\n  fetchUsername() {\r\n    this.state.contract.methods\r\n      .get_signup(this.props.match.params.publickey)\r\n      .call({ from: this.state.account })\r\n      .then((ipfs_hash) => {\r\n        console.log(\"hash from solidity\", ipfs_hash);\r\n        ipfs.cat(ipfs_hash, (error, result) => {\r\n          if (result === undefined) {\r\n            alert(\"There is an issue with your credentials\");\r\n            return;\r\n          }\r\n          let userData = JSON.parse(result.toString());\r\n          console.log(\"ipfs result\", userData);\r\n          this.setState({\r\n            userName: userData.First_Name + \" \" + userData.Last_Name,\r\n            publickey: userData.PublicKey,\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"bg1\">\r\n          <DistributorNavbar\r\n            username={this.state.userName}\r\n            publicKey={this.state.publickey}\r\n          />\r\n        </div>\r\n\r\n       <div>\r\n           <h1>works</h1>\r\n       </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}","/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/DistributorNavbar.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/hireTransporter.js",[],"/home/nikhil/Desktop/scm_project/src/components/pages/Distributor/buyGoods.js",[],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"245","replacedBy":"249"},{"ruleId":"247","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":17},{"ruleId":"251","severity":1,"message":"255","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":12},{"ruleId":"256","severity":1,"message":"257","line":98,"column":69,"nodeType":"258","endLine":98,"endColumn":86},{"ruleId":"251","severity":1,"message":"252","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":17},{"ruleId":"251","severity":1,"message":"255","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":12},{"ruleId":"251","severity":1,"message":"252","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":17},{"ruleId":"251","severity":1,"message":"255","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":12},{"ruleId":"251","severity":1,"message":"259","line":1,"column":28,"nodeType":"253","messageId":"254","endLine":1,"endColumn":34},{"ruleId":"251","severity":1,"message":"260","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"255","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":12},{"ruleId":"251","severity":1,"message":"261","line":16,"column":7,"nodeType":"253","messageId":"254","endLine":16,"endColumn":21},{"ruleId":"251","severity":1,"message":"262","line":17,"column":7,"nodeType":"253","messageId":"254","endLine":17,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":356,"column":40,"nodeType":"258","endLine":356,"endColumn":57},{"ruleId":"251","severity":1,"message":"259","line":1,"column":28,"nodeType":"253","messageId":"254","endLine":1,"endColumn":34},{"ruleId":"251","severity":1,"message":"260","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"255","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":12},{"ruleId":"251","severity":1,"message":"261","line":16,"column":7,"nodeType":"253","messageId":"254","endLine":16,"endColumn":21},{"ruleId":"251","severity":1,"message":"262","line":17,"column":7,"nodeType":"253","messageId":"254","endLine":17,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":331,"column":40,"nodeType":"258","endLine":331,"endColumn":57},{"ruleId":"251","severity":1,"message":"259","line":1,"column":28,"nodeType":"253","messageId":"254","endLine":1,"endColumn":34},{"ruleId":"251","severity":1,"message":"260","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"255","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":12},{"ruleId":"251","severity":1,"message":"261","line":16,"column":7,"nodeType":"253","messageId":"254","endLine":16,"endColumn":21},{"ruleId":"251","severity":1,"message":"262","line":17,"column":7,"nodeType":"253","messageId":"254","endLine":17,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":377,"column":40,"nodeType":"258","endLine":377,"endColumn":57},{"ruleId":"251","severity":1,"message":"260","line":6,"column":10,"nodeType":"253","messageId":"254","endLine":6,"endColumn":14},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],["263"],["264"],"no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar","'formValid' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useRef' is defined but never used.","'Link' is defined but never used.","'publickeyRegex' is assigned a value but never used.","'passRegex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]